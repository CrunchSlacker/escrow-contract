"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/cids";
exports.ids = ["vendor-chunks/cids"];
exports.modules = {

/***/ "(ssr)/./node_modules/cids/node_modules/multicodec/src/constants.js":
/*!********************************************************************!*\
  !*** ./node_modules/cids/node_modules/multicodec/src/constants.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst table = __webpack_require__(/*! ./base-table.json */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/base-table.json\");\n// map for codecConstant -> code\nconst constants = {};\nfor (const [name, code] of Object.entries(table)){\n    constants[name.toUpperCase().replace(/-/g, \"_\")] = code;\n}\nmodule.exports = Object.freeze(constants);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsUUFBUUMsbUJBQU9BLENBQUM7QUFFdEIsZ0NBQWdDO0FBQ2hDLE1BQU1DLFlBQVksQ0FBQztBQUVuQixLQUFLLE1BQU0sQ0FBQ0MsTUFBTUMsS0FBSyxJQUFJQyxPQUFPQyxPQUFPLENBQUNOLE9BQVE7SUFDaERFLFNBQVMsQ0FBQ0MsS0FBS0ksV0FBVyxHQUFHQyxPQUFPLENBQUMsTUFBTSxLQUFLLEdBQUdKO0FBQ3JEO0FBRUFLLE9BQU9DLE9BQU8sR0FBR0wsT0FBT00sTUFBTSxDQUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2NpZHMvbm9kZV9tb2R1bGVzL211bHRpY29kZWMvc3JjL2NvbnN0YW50cy5qcz8yZTU4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuXG5jb25zdCB0YWJsZSA9IHJlcXVpcmUoJy4vYmFzZS10YWJsZS5qc29uJylcblxuLy8gbWFwIGZvciBjb2RlY0NvbnN0YW50IC0+IGNvZGVcbmNvbnN0IGNvbnN0YW50cyA9IHt9XG5cbmZvciAoY29uc3QgW25hbWUsIGNvZGVdIG9mIE9iamVjdC5lbnRyaWVzKHRhYmxlKSkge1xuICBjb25zdGFudHNbbmFtZS50b1VwcGVyQ2FzZSgpLnJlcGxhY2UoLy0vZywgJ18nKV0gPSBjb2RlXG59XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmZyZWV6ZShjb25zdGFudHMpXG4iXSwibmFtZXMiOlsidGFibGUiLCJyZXF1aXJlIiwiY29uc3RhbnRzIiwibmFtZSIsImNvZGUiLCJPYmplY3QiLCJlbnRyaWVzIiwidG9VcHBlckNhc2UiLCJyZXBsYWNlIiwibW9kdWxlIiwiZXhwb3J0cyIsImZyZWV6ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/node_modules/multicodec/src/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/node_modules/multicodec/src/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/cids/node_modules/multicodec/src/index.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */ \nconst { Buffer } = __webpack_require__(/*! buffer */ \"buffer\");\nconst varint = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\nconst intTable = __webpack_require__(/*! ./int-table */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/int-table.js\");\nconst codecNameToCodeVarint = __webpack_require__(/*! ./varint-table */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/varint-table.js\");\nconst util = __webpack_require__(/*! ./util */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/util.js\");\nexports = module.exports;\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {string|number} multicodecStrOrCode\n * @param {Buffer} data\n * @returns {Buffer}\n */ exports.addPrefix = (multicodecStrOrCode, data)=>{\n    let prefix;\n    if (Buffer.isBuffer(multicodecStrOrCode)) {\n        prefix = util.varintBufferEncode(multicodecStrOrCode);\n    } else {\n        if (codecNameToCodeVarint[multicodecStrOrCode]) {\n            prefix = codecNameToCodeVarint[multicodecStrOrCode];\n        } else {\n            throw new Error(\"multicodec not recognized\");\n        }\n    }\n    return Buffer.concat([\n        prefix,\n        data\n    ]);\n};\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Buffer} data\n * @returns {Buffer}\n */ exports.rmPrefix = (data)=>{\n    varint.decode(data);\n    return data.slice(varint.decode.bytes);\n};\n/**\n * Get the codec of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {string}\n */ exports.getCodec = (prefixedData)=>{\n    const code = varint.decode(prefixedData);\n    const codecName = intTable.get(code);\n    if (codecName === undefined) {\n        throw new Error(`Code ${code} not found`);\n    }\n    return codecName;\n};\n/**\n * Get the name of the codec.\n * @param {number} codec\n * @returns {string}\n */ exports.getName = (codec)=>{\n    return intTable.get(codec);\n};\n/**\n * Get the code of the codec\n * @param {string} name\n * @returns {number}\n */ exports.getNumber = (name)=>{\n    const code = codecNameToCodeVarint[name];\n    if (code === undefined) {\n        throw new Error(\"Codec `\" + name + \"` not found\");\n    }\n    return util.varintBufferDecode(code)[0];\n};\n/**\n * Get the code of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {number}\n */ exports.getCode = (prefixedData)=>{\n    return varint.decode(prefixedData);\n};\n/**\n * Get the code as varint of a codec name.\n * @param {string} codecName\n * @returns {Buffer}\n */ exports.getCodeVarint = (codecName)=>{\n    const code = codecNameToCodeVarint[codecName];\n    if (code === undefined) {\n        throw new Error(\"Codec `\" + codecName + \"` not found\");\n    }\n    return code;\n};\n/**\n * Get the varint of a code.\n * @param {Number} code\n * @returns {Array.<number>}\n */ exports.getVarint = (code)=>{\n    return varint.encode(code);\n};\n// Make the constants top-level constants\nconst constants = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/constants.js\");\nObject.assign(exports, constants);\n// Human friendly names for printing, e.g. in error messages\nexports.print = __webpack_require__(/*! ./print */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/print.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Q0FVQyxHQUNEO0FBRUEsTUFBTSxFQUFFQSxNQUFNLEVBQUUsR0FBR0MsbUJBQU9BLENBQUM7QUFDM0IsTUFBTUMsU0FBU0QsbUJBQU9BLENBQUM7QUFDdkIsTUFBTUUsV0FBV0YsbUJBQU9BLENBQUM7QUFDekIsTUFBTUcsd0JBQXdCSCxtQkFBT0EsQ0FBQztBQUN0QyxNQUFNSSxPQUFPSixtQkFBT0EsQ0FBQztBQUVyQkssVUFBVUMsT0FBT0QsT0FBTztBQUV4Qjs7Ozs7O0NBTUMsR0FDREEsaUJBQWlCLEdBQUcsQ0FBQ0cscUJBQXFCQztJQUN4QyxJQUFJQztJQUVKLElBQUlYLE9BQU9ZLFFBQVEsQ0FBQ0gsc0JBQXNCO1FBQ3hDRSxTQUFTTixLQUFLUSxrQkFBa0IsQ0FBQ0o7SUFDbkMsT0FBTztRQUNMLElBQUlMLHFCQUFxQixDQUFDSyxvQkFBb0IsRUFBRTtZQUM5Q0UsU0FBU1AscUJBQXFCLENBQUNLLG9CQUFvQjtRQUNyRCxPQUFPO1lBQ0wsTUFBTSxJQUFJSyxNQUFNO1FBQ2xCO0lBQ0Y7SUFDQSxPQUFPZCxPQUFPZSxNQUFNLENBQUM7UUFBQ0o7UUFBUUQ7S0FBSztBQUNyQztBQUVBOzs7OztDQUtDLEdBQ0RKLGdCQUFnQixHQUFHLENBQUNJO0lBQ2xCUixPQUFPZSxNQUFNLENBQUNQO0lBQ2QsT0FBT0EsS0FBS1EsS0FBSyxDQUFDaEIsT0FBT2UsTUFBTSxDQUFDRSxLQUFLO0FBQ3ZDO0FBRUE7Ozs7Q0FJQyxHQUNEYixnQkFBZ0IsR0FBRyxDQUFDZTtJQUNsQixNQUFNQyxPQUFPcEIsT0FBT2UsTUFBTSxDQUFDSTtJQUMzQixNQUFNRSxZQUFZcEIsU0FBU3FCLEdBQUcsQ0FBQ0Y7SUFDL0IsSUFBSUMsY0FBY0UsV0FBVztRQUMzQixNQUFNLElBQUlYLE1BQU0sQ0FBQyxLQUFLLEVBQUVRLEtBQUssVUFBVSxDQUFDO0lBQzFDO0lBQ0EsT0FBT0M7QUFDVDtBQUVBOzs7O0NBSUMsR0FDRGpCLGVBQWUsR0FBRyxDQUFDcUI7SUFDakIsT0FBT3hCLFNBQVNxQixHQUFHLENBQUNHO0FBQ3RCO0FBRUE7Ozs7Q0FJQyxHQUNEckIsaUJBQWlCLEdBQUcsQ0FBQ3VCO0lBQ25CLE1BQU1QLE9BQU9sQixxQkFBcUIsQ0FBQ3lCLEtBQUs7SUFDeEMsSUFBSVAsU0FBU0csV0FBVztRQUN0QixNQUFNLElBQUlYLE1BQU0sWUFBWWUsT0FBTztJQUNyQztJQUNBLE9BQU94QixLQUFLeUIsa0JBQWtCLENBQUNSLEtBQUssQ0FBQyxFQUFFO0FBQ3pDO0FBRUE7Ozs7Q0FJQyxHQUNEaEIsZUFBZSxHQUFHLENBQUNlO0lBQ2pCLE9BQU9uQixPQUFPZSxNQUFNLENBQUNJO0FBQ3ZCO0FBRUE7Ozs7Q0FJQyxHQUNEZixxQkFBcUIsR0FBRyxDQUFDaUI7SUFDdkIsTUFBTUQsT0FBT2xCLHFCQUFxQixDQUFDbUIsVUFBVTtJQUM3QyxJQUFJRCxTQUFTRyxXQUFXO1FBQ3RCLE1BQU0sSUFBSVgsTUFBTSxZQUFZUyxZQUFZO0lBQzFDO0lBQ0EsT0FBT0Q7QUFDVDtBQUVBOzs7O0NBSUMsR0FDRGhCLGlCQUFpQixHQUFHLENBQUNnQjtJQUNuQixPQUFPcEIsT0FBT2dDLE1BQU0sQ0FBQ1o7QUFDdkI7QUFFQSx5Q0FBeUM7QUFDekMsTUFBTWEsWUFBWWxDLG1CQUFPQSxDQUFDO0FBQzFCbUMsT0FBT0MsTUFBTSxDQUFDL0IsU0FBUzZCO0FBRXZCLDREQUE0RDtBQUM1RDdCLG9IQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2NpZHMvbm9kZV9tb2R1bGVzL211bHRpY29kZWMvc3JjL2luZGV4LmpzPzUxYWIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBJbXBsZW1lbnRhdGlvbiBvZiB0aGUgbXVsdGljb2RlYyBzcGVjaWZpY2F0aW9uLlxuICpcbiAqIEBtb2R1bGUgbXVsdGljb2RlY1xuICogQGV4YW1wbGVcbiAqIGNvbnN0IG11bHRpY29kZWMgPSByZXF1aXJlKCdtdWx0aWNvZGVjJylcbiAqXG4gKiBjb25zdCBwcmVmaXhlZFByb3RvYnVmID0gbXVsdGljb2RlYy5hZGRQcmVmaXgoJ3Byb3RvYnVmJywgcHJvdG9idWZCdWZmZXIpXG4gKiAvLyBwcmVmaXhlZFByb3RvYnVmIDB4NTAuLi5cbiAqXG4gKi9cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCB7IEJ1ZmZlciB9ID0gcmVxdWlyZSgnYnVmZmVyJylcbmNvbnN0IHZhcmludCA9IHJlcXVpcmUoJ3ZhcmludCcpXG5jb25zdCBpbnRUYWJsZSA9IHJlcXVpcmUoJy4vaW50LXRhYmxlJylcbmNvbnN0IGNvZGVjTmFtZVRvQ29kZVZhcmludCA9IHJlcXVpcmUoJy4vdmFyaW50LXRhYmxlJylcbmNvbnN0IHV0aWwgPSByZXF1aXJlKCcuL3V0aWwnKVxuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHNcblxuLyoqXG4gKiBQcmVmaXggYSBidWZmZXIgd2l0aCBhIG11bHRpY29kZWMtcGFja2VkLlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gbXVsdGljb2RlY1N0ck9yQ29kZVxuICogQHBhcmFtIHtCdWZmZXJ9IGRhdGFcbiAqIEByZXR1cm5zIHtCdWZmZXJ9XG4gKi9cbmV4cG9ydHMuYWRkUHJlZml4ID0gKG11bHRpY29kZWNTdHJPckNvZGUsIGRhdGEpID0+IHtcbiAgbGV0IHByZWZpeFxuXG4gIGlmIChCdWZmZXIuaXNCdWZmZXIobXVsdGljb2RlY1N0ck9yQ29kZSkpIHtcbiAgICBwcmVmaXggPSB1dGlsLnZhcmludEJ1ZmZlckVuY29kZShtdWx0aWNvZGVjU3RyT3JDb2RlKVxuICB9IGVsc2Uge1xuICAgIGlmIChjb2RlY05hbWVUb0NvZGVWYXJpbnRbbXVsdGljb2RlY1N0ck9yQ29kZV0pIHtcbiAgICAgIHByZWZpeCA9IGNvZGVjTmFtZVRvQ29kZVZhcmludFttdWx0aWNvZGVjU3RyT3JDb2RlXVxuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ211bHRpY29kZWMgbm90IHJlY29nbml6ZWQnKVxuICAgIH1cbiAgfVxuICByZXR1cm4gQnVmZmVyLmNvbmNhdChbcHJlZml4LCBkYXRhXSlcbn1cblxuLyoqXG4gKiBEZWNhcHN1bGF0ZSB0aGUgbXVsdGljb2RlYy1wYWNrZWQgcHJlZml4IGZyb20gdGhlIGRhdGEuXG4gKlxuICogQHBhcmFtIHtCdWZmZXJ9IGRhdGFcbiAqIEByZXR1cm5zIHtCdWZmZXJ9XG4gKi9cbmV4cG9ydHMucm1QcmVmaXggPSAoZGF0YSkgPT4ge1xuICB2YXJpbnQuZGVjb2RlKGRhdGEpXG4gIHJldHVybiBkYXRhLnNsaWNlKHZhcmludC5kZWNvZGUuYnl0ZXMpXG59XG5cbi8qKlxuICogR2V0IHRoZSBjb2RlYyBvZiB0aGUgcHJlZml4ZWQgZGF0YS5cbiAqIEBwYXJhbSB7QnVmZmVyfSBwcmVmaXhlZERhdGFcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydHMuZ2V0Q29kZWMgPSAocHJlZml4ZWREYXRhKSA9PiB7XG4gIGNvbnN0IGNvZGUgPSB2YXJpbnQuZGVjb2RlKHByZWZpeGVkRGF0YSlcbiAgY29uc3QgY29kZWNOYW1lID0gaW50VGFibGUuZ2V0KGNvZGUpXG4gIGlmIChjb2RlY05hbWUgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ29kZSAke2NvZGV9IG5vdCBmb3VuZGApXG4gIH1cbiAgcmV0dXJuIGNvZGVjTmFtZVxufVxuXG4vKipcbiAqIEdldCB0aGUgbmFtZSBvZiB0aGUgY29kZWMuXG4gKiBAcGFyYW0ge251bWJlcn0gY29kZWNcbiAqIEByZXR1cm5zIHtzdHJpbmd9XG4gKi9cbmV4cG9ydHMuZ2V0TmFtZSA9IChjb2RlYykgPT4ge1xuICByZXR1cm4gaW50VGFibGUuZ2V0KGNvZGVjKVxufVxuXG4vKipcbiAqIEdldCB0aGUgY29kZSBvZiB0aGUgY29kZWNcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnRzLmdldE51bWJlciA9IChuYW1lKSA9PiB7XG4gIGNvbnN0IGNvZGUgPSBjb2RlY05hbWVUb0NvZGVWYXJpbnRbbmFtZV1cbiAgaWYgKGNvZGUgPT09IHVuZGVmaW5lZCkge1xuICAgIHRocm93IG5ldyBFcnJvcignQ29kZWMgYCcgKyBuYW1lICsgJ2Agbm90IGZvdW5kJylcbiAgfVxuICByZXR1cm4gdXRpbC52YXJpbnRCdWZmZXJEZWNvZGUoY29kZSlbMF1cbn1cblxuLyoqXG4gKiBHZXQgdGhlIGNvZGUgb2YgdGhlIHByZWZpeGVkIGRhdGEuXG4gKiBAcGFyYW0ge0J1ZmZlcn0gcHJlZml4ZWREYXRhXG4gKiBAcmV0dXJucyB7bnVtYmVyfVxuICovXG5leHBvcnRzLmdldENvZGUgPSAocHJlZml4ZWREYXRhKSA9PiB7XG4gIHJldHVybiB2YXJpbnQuZGVjb2RlKHByZWZpeGVkRGF0YSlcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGNvZGUgYXMgdmFyaW50IG9mIGEgY29kZWMgbmFtZS5cbiAqIEBwYXJhbSB7c3RyaW5nfSBjb2RlY05hbWVcbiAqIEByZXR1cm5zIHtCdWZmZXJ9XG4gKi9cbmV4cG9ydHMuZ2V0Q29kZVZhcmludCA9IChjb2RlY05hbWUpID0+IHtcbiAgY29uc3QgY29kZSA9IGNvZGVjTmFtZVRvQ29kZVZhcmludFtjb2RlY05hbWVdXG4gIGlmIChjb2RlID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvZGVjIGAnICsgY29kZWNOYW1lICsgJ2Agbm90IGZvdW5kJylcbiAgfVxuICByZXR1cm4gY29kZVxufVxuXG4vKipcbiAqIEdldCB0aGUgdmFyaW50IG9mIGEgY29kZS5cbiAqIEBwYXJhbSB7TnVtYmVyfSBjb2RlXG4gKiBAcmV0dXJucyB7QXJyYXkuPG51bWJlcj59XG4gKi9cbmV4cG9ydHMuZ2V0VmFyaW50ID0gKGNvZGUpID0+IHtcbiAgcmV0dXJuIHZhcmludC5lbmNvZGUoY29kZSlcbn1cblxuLy8gTWFrZSB0aGUgY29uc3RhbnRzIHRvcC1sZXZlbCBjb25zdGFudHNcbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJylcbk9iamVjdC5hc3NpZ24oZXhwb3J0cywgY29uc3RhbnRzKVxuXG4vLyBIdW1hbiBmcmllbmRseSBuYW1lcyBmb3IgcHJpbnRpbmcsIGUuZy4gaW4gZXJyb3IgbWVzc2FnZXNcbmV4cG9ydHMucHJpbnQgPSByZXF1aXJlKCcuL3ByaW50JylcbiJdLCJuYW1lcyI6WyJCdWZmZXIiLCJyZXF1aXJlIiwidmFyaW50IiwiaW50VGFibGUiLCJjb2RlY05hbWVUb0NvZGVWYXJpbnQiLCJ1dGlsIiwiZXhwb3J0cyIsIm1vZHVsZSIsImFkZFByZWZpeCIsIm11bHRpY29kZWNTdHJPckNvZGUiLCJkYXRhIiwicHJlZml4IiwiaXNCdWZmZXIiLCJ2YXJpbnRCdWZmZXJFbmNvZGUiLCJFcnJvciIsImNvbmNhdCIsInJtUHJlZml4IiwiZGVjb2RlIiwic2xpY2UiLCJieXRlcyIsImdldENvZGVjIiwicHJlZml4ZWREYXRhIiwiY29kZSIsImNvZGVjTmFtZSIsImdldCIsInVuZGVmaW5lZCIsImdldE5hbWUiLCJjb2RlYyIsImdldE51bWJlciIsIm5hbWUiLCJ2YXJpbnRCdWZmZXJEZWNvZGUiLCJnZXRDb2RlIiwiZ2V0Q29kZVZhcmludCIsImdldFZhcmludCIsImVuY29kZSIsImNvbnN0YW50cyIsIk9iamVjdCIsImFzc2lnbiIsInByaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/node_modules/multicodec/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/node_modules/multicodec/src/int-table.js":
/*!********************************************************************!*\
  !*** ./node_modules/cids/node_modules/multicodec/src/int-table.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst baseTable = __webpack_require__(/*! ./base-table.json */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/base-table.json\");\n// map for hexString -> codecName\nconst nameTable = new Map();\nfor(const encodingName in baseTable){\n    const code = baseTable[encodingName];\n    nameTable.set(code, encodingName);\n}\nmodule.exports = Object.freeze(nameTable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvaW50LXRhYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsWUFBWUMsbUJBQU9BLENBQUM7QUFFMUIsaUNBQWlDO0FBQ2pDLE1BQU1DLFlBQVksSUFBSUM7QUFFdEIsSUFBSyxNQUFNQyxnQkFBZ0JKLFVBQVc7SUFDcEMsTUFBTUssT0FBT0wsU0FBUyxDQUFDSSxhQUFhO0lBQ3BDRixVQUFVSSxHQUFHLENBQUNELE1BQU1EO0FBQ3RCO0FBRUFHLE9BQU9DLE9BQU8sR0FBR0MsT0FBT0MsTUFBTSxDQUFDUiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2NpZHMvbm9kZV9tb2R1bGVzL211bHRpY29kZWMvc3JjL2ludC10YWJsZS5qcz8xNWMwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuY29uc3QgYmFzZVRhYmxlID0gcmVxdWlyZSgnLi9iYXNlLXRhYmxlLmpzb24nKVxuXG4vLyBtYXAgZm9yIGhleFN0cmluZyAtPiBjb2RlY05hbWVcbmNvbnN0IG5hbWVUYWJsZSA9IG5ldyBNYXAoKVxuXG5mb3IgKGNvbnN0IGVuY29kaW5nTmFtZSBpbiBiYXNlVGFibGUpIHtcbiAgY29uc3QgY29kZSA9IGJhc2VUYWJsZVtlbmNvZGluZ05hbWVdXG4gIG5hbWVUYWJsZS5zZXQoY29kZSwgZW5jb2RpbmdOYW1lKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5mcmVlemUobmFtZVRhYmxlKVxuIl0sIm5hbWVzIjpbImJhc2VUYWJsZSIsInJlcXVpcmUiLCJuYW1lVGFibGUiLCJNYXAiLCJlbmNvZGluZ05hbWUiLCJjb2RlIiwic2V0IiwibW9kdWxlIiwiZXhwb3J0cyIsIk9iamVjdCIsImZyZWV6ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/node_modules/multicodec/src/int-table.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/node_modules/multicodec/src/print.js":
/*!****************************************************************!*\
  !*** ./node_modules/cids/node_modules/multicodec/src/print.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst table = __webpack_require__(/*! ./base-table.json */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/base-table.json\");\n// map for code -> print friendly name\nconst tableByCode = {};\nfor (const [name, code] of Object.entries(table)){\n    if (tableByCode[code] === undefined) tableByCode[code] = name;\n}\nmodule.exports = Object.freeze(tableByCode);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvcHJpbnQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUV0QixzQ0FBc0M7QUFDdEMsTUFBTUMsY0FBYyxDQUFDO0FBRXJCLEtBQUssTUFBTSxDQUFDQyxNQUFNQyxLQUFLLElBQUlDLE9BQU9DLE9BQU8sQ0FBQ04sT0FBUTtJQUNoRCxJQUFJRSxXQUFXLENBQUNFLEtBQUssS0FBS0csV0FBV0wsV0FBVyxDQUFDRSxLQUFLLEdBQUdEO0FBQzNEO0FBRUFLLE9BQU9DLE9BQU8sR0FBR0osT0FBT0ssTUFBTSxDQUFDUiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2NpZHMvbm9kZV9tb2R1bGVzL211bHRpY29kZWMvc3JjL3ByaW50LmpzP2NiYzgiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IHRhYmxlID0gcmVxdWlyZSgnLi9iYXNlLXRhYmxlLmpzb24nKVxuXG4vLyBtYXAgZm9yIGNvZGUgLT4gcHJpbnQgZnJpZW5kbHkgbmFtZVxuY29uc3QgdGFibGVCeUNvZGUgPSB7fVxuXG5mb3IgKGNvbnN0IFtuYW1lLCBjb2RlXSBvZiBPYmplY3QuZW50cmllcyh0YWJsZSkpIHtcbiAgaWYgKHRhYmxlQnlDb2RlW2NvZGVdID09PSB1bmRlZmluZWQpIHRhYmxlQnlDb2RlW2NvZGVdID0gbmFtZVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5mcmVlemUodGFibGVCeUNvZGUpXG4iXSwibmFtZXMiOlsidGFibGUiLCJyZXF1aXJlIiwidGFibGVCeUNvZGUiLCJuYW1lIiwiY29kZSIsIk9iamVjdCIsImVudHJpZXMiLCJ1bmRlZmluZWQiLCJtb2R1bGUiLCJleHBvcnRzIiwiZnJlZXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/node_modules/multicodec/src/print.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/node_modules/multicodec/src/util.js":
/*!***************************************************************!*\
  !*** ./node_modules/cids/node_modules/multicodec/src/util.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst varint = __webpack_require__(/*! varint */ \"(ssr)/./node_modules/varint/index.js\");\nconst { Buffer } = __webpack_require__(/*! buffer */ \"buffer\");\nmodule.exports = {\n    numberToBuffer,\n    bufferToNumber,\n    varintBufferEncode,\n    varintBufferDecode,\n    varintEncode\n};\nfunction bufferToNumber(buf) {\n    return parseInt(buf.toString(\"hex\"), 16);\n}\nfunction numberToBuffer(num) {\n    let hexString = num.toString(16);\n    if (hexString.length % 2 === 1) {\n        hexString = \"0\" + hexString;\n    }\n    return Buffer.from(hexString, \"hex\");\n}\nfunction varintBufferEncode(input) {\n    return Buffer.from(varint.encode(bufferToNumber(input)));\n}\nfunction varintBufferDecode(input) {\n    return numberToBuffer(varint.decode(input));\n}\nfunction varintEncode(num) {\n    return Buffer.from(varint.encode(num));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvdXRpbC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLFNBQVNDLG1CQUFPQSxDQUFDO0FBQ3ZCLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdELG1CQUFPQSxDQUFDO0FBRTNCRSxPQUFPQyxPQUFPLEdBQUc7SUFDZkM7SUFDQUM7SUFDQUM7SUFDQUM7SUFDQUM7QUFDRjtBQUVBLFNBQVNILGVBQWdCSSxHQUFHO0lBQzFCLE9BQU9DLFNBQVNELElBQUlFLFFBQVEsQ0FBQyxRQUFRO0FBQ3ZDO0FBRUEsU0FBU1AsZUFBZ0JRLEdBQUc7SUFDMUIsSUFBSUMsWUFBWUQsSUFBSUQsUUFBUSxDQUFDO0lBQzdCLElBQUlFLFVBQVVDLE1BQU0sR0FBRyxNQUFNLEdBQUc7UUFDOUJELFlBQVksTUFBTUE7SUFDcEI7SUFDQSxPQUFPWixPQUFPYyxJQUFJLENBQUNGLFdBQVc7QUFDaEM7QUFFQSxTQUFTUCxtQkFBb0JVLEtBQUs7SUFDaEMsT0FBT2YsT0FBT2MsSUFBSSxDQUFDaEIsT0FBT2tCLE1BQU0sQ0FBQ1osZUFBZVc7QUFDbEQ7QUFFQSxTQUFTVCxtQkFBb0JTLEtBQUs7SUFDaEMsT0FBT1osZUFBZUwsT0FBT21CLE1BQU0sQ0FBQ0Y7QUFDdEM7QUFFQSxTQUFTUixhQUFjSSxHQUFHO0lBQ3hCLE9BQU9YLE9BQU9jLElBQUksQ0FBQ2hCLE9BQU9rQixNQUFNLENBQUNMO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvdXRpbC5qcz81ZDIwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0J1xuY29uc3QgdmFyaW50ID0gcmVxdWlyZSgndmFyaW50JylcbmNvbnN0IHsgQnVmZmVyIH0gPSByZXF1aXJlKCdidWZmZXInKVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbnVtYmVyVG9CdWZmZXIsXG4gIGJ1ZmZlclRvTnVtYmVyLFxuICB2YXJpbnRCdWZmZXJFbmNvZGUsXG4gIHZhcmludEJ1ZmZlckRlY29kZSxcbiAgdmFyaW50RW5jb2RlXG59XG5cbmZ1bmN0aW9uIGJ1ZmZlclRvTnVtYmVyIChidWYpIHtcbiAgcmV0dXJuIHBhcnNlSW50KGJ1Zi50b1N0cmluZygnaGV4JyksIDE2KVxufVxuXG5mdW5jdGlvbiBudW1iZXJUb0J1ZmZlciAobnVtKSB7XG4gIGxldCBoZXhTdHJpbmcgPSBudW0udG9TdHJpbmcoMTYpXG4gIGlmIChoZXhTdHJpbmcubGVuZ3RoICUgMiA9PT0gMSkge1xuICAgIGhleFN0cmluZyA9ICcwJyArIGhleFN0cmluZ1xuICB9XG4gIHJldHVybiBCdWZmZXIuZnJvbShoZXhTdHJpbmcsICdoZXgnKVxufVxuXG5mdW5jdGlvbiB2YXJpbnRCdWZmZXJFbmNvZGUgKGlucHV0KSB7XG4gIHJldHVybiBCdWZmZXIuZnJvbSh2YXJpbnQuZW5jb2RlKGJ1ZmZlclRvTnVtYmVyKGlucHV0KSkpXG59XG5cbmZ1bmN0aW9uIHZhcmludEJ1ZmZlckRlY29kZSAoaW5wdXQpIHtcbiAgcmV0dXJuIG51bWJlclRvQnVmZmVyKHZhcmludC5kZWNvZGUoaW5wdXQpKVxufVxuXG5mdW5jdGlvbiB2YXJpbnRFbmNvZGUgKG51bSkge1xuICByZXR1cm4gQnVmZmVyLmZyb20odmFyaW50LmVuY29kZShudW0pKVxufVxuIl0sIm5hbWVzIjpbInZhcmludCIsInJlcXVpcmUiLCJCdWZmZXIiLCJtb2R1bGUiLCJleHBvcnRzIiwibnVtYmVyVG9CdWZmZXIiLCJidWZmZXJUb051bWJlciIsInZhcmludEJ1ZmZlckVuY29kZSIsInZhcmludEJ1ZmZlckRlY29kZSIsInZhcmludEVuY29kZSIsImJ1ZiIsInBhcnNlSW50IiwidG9TdHJpbmciLCJudW0iLCJoZXhTdHJpbmciLCJsZW5ndGgiLCJmcm9tIiwiaW5wdXQiLCJlbmNvZGUiLCJkZWNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/node_modules/multicodec/src/util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/node_modules/multicodec/src/varint-table.js":
/*!***********************************************************************!*\
  !*** ./node_modules/cids/node_modules/multicodec/src/varint-table.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst baseTable = __webpack_require__(/*! ./base-table.json */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/base-table.json\");\nconst varintEncode = (__webpack_require__(/*! ./util */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/util.js\").varintEncode);\n// map for codecName -> codeVarintBuffer\nconst varintTable = {};\nfor(const encodingName in baseTable){\n    const code = baseTable[encodingName];\n    varintTable[encodingName] = varintEncode(code);\n}\nmodule.exports = Object.freeze(varintTable);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvdmFyaW50LXRhYmxlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsWUFBWUMsbUJBQU9BLENBQUM7QUFDMUIsTUFBTUMsZUFBZUQsaUhBQThCO0FBRW5ELHdDQUF3QztBQUN4QyxNQUFNRSxjQUFjLENBQUM7QUFFckIsSUFBSyxNQUFNQyxnQkFBZ0JKLFVBQVc7SUFDcEMsTUFBTUssT0FBT0wsU0FBUyxDQUFDSSxhQUFhO0lBQ3BDRCxXQUFXLENBQUNDLGFBQWEsR0FBR0YsYUFBYUc7QUFDM0M7QUFFQUMsT0FBT0MsT0FBTyxHQUFHQyxPQUFPQyxNQUFNLENBQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvY2lkcy9ub2RlX21vZHVsZXMvbXVsdGljb2RlYy9zcmMvdmFyaW50LXRhYmxlLmpzP2IyZTIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IGJhc2VUYWJsZSA9IHJlcXVpcmUoJy4vYmFzZS10YWJsZS5qc29uJylcbmNvbnN0IHZhcmludEVuY29kZSA9IHJlcXVpcmUoJy4vdXRpbCcpLnZhcmludEVuY29kZVxuXG4vLyBtYXAgZm9yIGNvZGVjTmFtZSAtPiBjb2RlVmFyaW50QnVmZmVyXG5jb25zdCB2YXJpbnRUYWJsZSA9IHt9XG5cbmZvciAoY29uc3QgZW5jb2RpbmdOYW1lIGluIGJhc2VUYWJsZSkge1xuICBjb25zdCBjb2RlID0gYmFzZVRhYmxlW2VuY29kaW5nTmFtZV1cbiAgdmFyaW50VGFibGVbZW5jb2RpbmdOYW1lXSA9IHZhcmludEVuY29kZShjb2RlKVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5mcmVlemUodmFyaW50VGFibGUpXG4iXSwibmFtZXMiOlsiYmFzZVRhYmxlIiwicmVxdWlyZSIsInZhcmludEVuY29kZSIsInZhcmludFRhYmxlIiwiZW5jb2RpbmdOYW1lIiwiY29kZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJPYmplY3QiLCJmcmVlemUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/node_modules/multicodec/src/varint-table.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/src/cid-util.js":
/*!*******************************************!*\
  !*** ./node_modules/cids/src/cid-util.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst mh = __webpack_require__(/*! multihashes */ \"(ssr)/./node_modules/multihashes/src/index.js\");\nconst { Buffer } = __webpack_require__(/*! buffer */ \"buffer\");\nvar CIDUtil = {\n    /**\n   * Test if the given input is a valid CID object.\n   * Returns an error message if it is not.\n   * Returns undefined if it is a valid CID.\n   *\n   * @param {any} other\n   * @returns {string}\n   */ checkCIDComponents: function(other) {\n        if (other == null) {\n            return \"null values are not valid CIDs\";\n        }\n        if (!(other.version === 0 || other.version === 1)) {\n            return \"Invalid version, must be a number equal to 1 or 0\";\n        }\n        if (typeof other.codec !== \"string\") {\n            return \"codec must be string\";\n        }\n        if (other.version === 0) {\n            if (other.codec !== \"dag-pb\") {\n                return \"codec must be 'dag-pb' for CIDv0\";\n            }\n            if (other.multibaseName !== \"base58btc\") {\n                return \"multibaseName must be 'base58btc' for CIDv0\";\n            }\n        }\n        if (!Buffer.isBuffer(other.multihash)) {\n            return \"multihash must be a Buffer\";\n        }\n        try {\n            mh.validate(other.multihash);\n        } catch (err) {\n            let errorMsg = err.message;\n            if (!errorMsg) {\n                errorMsg = \"Multihash validation failed\";\n            }\n            return errorMsg;\n        }\n    }\n};\nmodule.exports = CIDUtil;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvY2lkcy9zcmMvY2lkLXV0aWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxLQUFLQyxtQkFBT0EsQ0FBQztBQUNuQixNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHRCxtQkFBT0EsQ0FBQztBQUMzQixJQUFJRSxVQUFVO0lBQ1o7Ozs7Ozs7R0FPQyxHQUNEQyxvQkFBb0IsU0FBVUMsS0FBSztRQUNqQyxJQUFJQSxTQUFTLE1BQU07WUFDakIsT0FBTztRQUNUO1FBRUEsSUFBSSxDQUFFQSxDQUFBQSxNQUFNQyxPQUFPLEtBQUssS0FBS0QsTUFBTUMsT0FBTyxLQUFLLElBQUk7WUFDakQsT0FBTztRQUNUO1FBRUEsSUFBSSxPQUFPRCxNQUFNRSxLQUFLLEtBQUssVUFBVTtZQUNuQyxPQUFPO1FBQ1Q7UUFFQSxJQUFJRixNQUFNQyxPQUFPLEtBQUssR0FBRztZQUN2QixJQUFJRCxNQUFNRSxLQUFLLEtBQUssVUFBVTtnQkFDNUIsT0FBTztZQUNUO1lBQ0EsSUFBSUYsTUFBTUcsYUFBYSxLQUFLLGFBQWE7Z0JBQ3ZDLE9BQU87WUFDVDtRQUNGO1FBRUEsSUFBSSxDQUFDTixPQUFPTyxRQUFRLENBQUNKLE1BQU1LLFNBQVMsR0FBRztZQUNyQyxPQUFPO1FBQ1Q7UUFFQSxJQUFJO1lBQ0ZWLEdBQUdXLFFBQVEsQ0FBQ04sTUFBTUssU0FBUztRQUM3QixFQUFFLE9BQU9FLEtBQUs7WUFDWixJQUFJQyxXQUFXRCxJQUFJRSxPQUFPO1lBQzFCLElBQUksQ0FBQ0QsVUFBVTtnQkFDYkEsV0FBVztZQUNiO1lBQ0EsT0FBT0E7UUFDVDtJQUNGO0FBQ0Y7QUFFQUUsT0FBT0MsT0FBTyxHQUFHYiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL2NpZHMvc3JjL2NpZC11dGlsLmpzP2U2YjIiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNvbnN0IG1oID0gcmVxdWlyZSgnbXVsdGloYXNoZXMnKVxuY29uc3QgeyBCdWZmZXIgfSA9IHJlcXVpcmUoJ2J1ZmZlcicpXG52YXIgQ0lEVXRpbCA9IHtcbiAgLyoqXG4gICAqIFRlc3QgaWYgdGhlIGdpdmVuIGlucHV0IGlzIGEgdmFsaWQgQ0lEIG9iamVjdC5cbiAgICogUmV0dXJucyBhbiBlcnJvciBtZXNzYWdlIGlmIGl0IGlzIG5vdC5cbiAgICogUmV0dXJucyB1bmRlZmluZWQgaWYgaXQgaXMgYSB2YWxpZCBDSUQuXG4gICAqXG4gICAqIEBwYXJhbSB7YW55fSBvdGhlclxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgY2hlY2tDSURDb21wb25lbnRzOiBmdW5jdGlvbiAob3RoZXIpIHtcbiAgICBpZiAob3RoZXIgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuICdudWxsIHZhbHVlcyBhcmUgbm90IHZhbGlkIENJRHMnXG4gICAgfVxuXG4gICAgaWYgKCEob3RoZXIudmVyc2lvbiA9PT0gMCB8fCBvdGhlci52ZXJzaW9uID09PSAxKSkge1xuICAgICAgcmV0dXJuICdJbnZhbGlkIHZlcnNpb24sIG11c3QgYmUgYSBudW1iZXIgZXF1YWwgdG8gMSBvciAwJ1xuICAgIH1cblxuICAgIGlmICh0eXBlb2Ygb3RoZXIuY29kZWMgIT09ICdzdHJpbmcnKSB7XG4gICAgICByZXR1cm4gJ2NvZGVjIG11c3QgYmUgc3RyaW5nJ1xuICAgIH1cblxuICAgIGlmIChvdGhlci52ZXJzaW9uID09PSAwKSB7XG4gICAgICBpZiAob3RoZXIuY29kZWMgIT09ICdkYWctcGInKSB7XG4gICAgICAgIHJldHVybiBcImNvZGVjIG11c3QgYmUgJ2RhZy1wYicgZm9yIENJRHYwXCJcbiAgICAgIH1cbiAgICAgIGlmIChvdGhlci5tdWx0aWJhc2VOYW1lICE9PSAnYmFzZTU4YnRjJykge1xuICAgICAgICByZXR1cm4gXCJtdWx0aWJhc2VOYW1lIG11c3QgYmUgJ2Jhc2U1OGJ0YycgZm9yIENJRHYwXCJcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIUJ1ZmZlci5pc0J1ZmZlcihvdGhlci5tdWx0aWhhc2gpKSB7XG4gICAgICByZXR1cm4gJ211bHRpaGFzaCBtdXN0IGJlIGEgQnVmZmVyJ1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBtaC52YWxpZGF0ZShvdGhlci5tdWx0aWhhc2gpXG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBsZXQgZXJyb3JNc2cgPSBlcnIubWVzc2FnZVxuICAgICAgaWYgKCFlcnJvck1zZykgeyAvLyBKdXN0IGluIGNhc2UgbWgudmFsaWRhdGUoKSB0aHJvd3MgYW4gZXJyb3Igd2l0aCBlbXB0eSBlcnJvciBtZXNzYWdlXG4gICAgICAgIGVycm9yTXNnID0gJ011bHRpaGFzaCB2YWxpZGF0aW9uIGZhaWxlZCdcbiAgICAgIH1cbiAgICAgIHJldHVybiBlcnJvck1zZ1xuICAgIH1cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IENJRFV0aWxcbiJdLCJuYW1lcyI6WyJtaCIsInJlcXVpcmUiLCJCdWZmZXIiLCJDSURVdGlsIiwiY2hlY2tDSURDb21wb25lbnRzIiwib3RoZXIiLCJ2ZXJzaW9uIiwiY29kZWMiLCJtdWx0aWJhc2VOYW1lIiwiaXNCdWZmZXIiLCJtdWx0aWhhc2giLCJ2YWxpZGF0ZSIsImVyciIsImVycm9yTXNnIiwibWVzc2FnZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/src/cid-util.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/src/index.js":
/*!****************************************!*\
  !*** ./node_modules/cids/src/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { Buffer } = __webpack_require__(/*! buffer */ \"buffer\");\nconst mh = __webpack_require__(/*! multihashes */ \"(ssr)/./node_modules/multihashes/src/index.js\");\nconst multibase = __webpack_require__(/*! multibase */ \"(ssr)/./node_modules/multibase/src/index.js\");\nconst multicodec = __webpack_require__(/*! multicodec */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/index.js\");\nconst codecs = __webpack_require__(/*! multicodec/src/base-table.json */ \"(ssr)/./node_modules/cids/node_modules/multicodec/src/base-table.json\");\nconst CIDUtil = __webpack_require__(/*! ./cid-util */ \"(ssr)/./node_modules/cids/src/cid-util.js\");\nconst withIs = __webpack_require__(/*! class-is */ \"(ssr)/./node_modules/class-is/index.js\");\n/**\n * @typedef {Object} SerializedCID\n * @param {string} codec\n * @param {number} version\n * @param {Buffer} multihash\n */ /**\n * Test if the given input is a CID.\n * @function isCID\n * @memberof CID\n * @static\n * @param {any} other\n * @returns {bool}\n */ /**\n * Class representing a CID `<mbase><version><mcodec><mhash>`\n * , as defined in [ipld/cid](https://github.com/multiformats/cid).\n * @class CID\n */ class CID {\n    /**\n   * Create a new CID.\n   *\n   * The algorithm for argument input is roughly:\n   * ```\n   * if (cid)\n   *   -> create a copy\n   * else if (str)\n   *   if (1st char is on multibase table) -> CID String\n   *   else -> bs58 encoded multihash\n   * else if (Buffer)\n   *   if (1st byte is 0 or 1) -> CID\n   *   else -> multihash\n   * else if (Number)\n   *   -> construct CID by parts\n   * ```\n   *\n   * @param {string|Buffer|CID} version\n   * @param {string} [codec]\n   * @param {Buffer} [multihash]\n   * @param {string} [multibaseName]\n   *\n   * @example\n   * new CID(<version>, <codec>, <multihash>, <multibaseName>)\n   * new CID(<cidStr>)\n   * new CID(<cid.buffer>)\n   * new CID(<multihash>)\n   * new CID(<bs58 encoded multihash>)\n   * new CID(<cid>)\n   */ constructor(version, codec, multihash, multibaseName){\n        if (_CID.isCID(version)) {\n            // version is an exising CID instance\n            const cid = version;\n            this.version = cid.version;\n            this.codec = cid.codec;\n            this.multihash = Buffer.from(cid.multihash);\n            // Default guard for when a CID < 0.7 is passed with no multibaseName\n            this.multibaseName = cid.multibaseName || (cid.version === 0 ? \"base58btc\" : \"base32\");\n            return;\n        }\n        if (typeof version === \"string\") {\n            // e.g. 'base32' or false\n            const baseName = multibase.isEncoded(version);\n            if (baseName) {\n                // version is a CID String encoded with multibase, so v1\n                const cid = multibase.decode(version);\n                this.version = parseInt(cid.slice(0, 1).toString(\"hex\"), 16);\n                this.codec = multicodec.getCodec(cid.slice(1));\n                this.multihash = multicodec.rmPrefix(cid.slice(1));\n                this.multibaseName = baseName;\n            } else {\n                // version is a base58btc string multihash, so v0\n                this.version = 0;\n                this.codec = \"dag-pb\";\n                this.multihash = mh.fromB58String(version);\n                this.multibaseName = \"base58btc\";\n            }\n            CID.validateCID(this);\n            Object.defineProperty(this, \"string\", {\n                value: version\n            });\n            return;\n        }\n        if (Buffer.isBuffer(version)) {\n            const firstByte = version.slice(0, 1);\n            const v = parseInt(firstByte.toString(\"hex\"), 16);\n            if (v === 1) {\n                // version is a CID buffer\n                const cid = version;\n                this.version = v;\n                this.codec = multicodec.getCodec(cid.slice(1));\n                this.multihash = multicodec.rmPrefix(cid.slice(1));\n                this.multibaseName = \"base32\";\n            } else {\n                // version is a raw multihash buffer, so v0\n                this.version = 0;\n                this.codec = \"dag-pb\";\n                this.multihash = version;\n                this.multibaseName = \"base58btc\";\n            }\n            CID.validateCID(this);\n            return;\n        }\n        // otherwise, assemble the CID from the parameters\n        /**\n     * @type {number}\n     */ this.version = version;\n        /**\n     * @type {string}\n     */ this.codec = codec;\n        /**\n     * @type {Buffer}\n     */ this.multihash = multihash;\n        /**\n     * @type {string}\n     */ this.multibaseName = multibaseName || (version === 0 ? \"base58btc\" : \"base32\");\n        CID.validateCID(this);\n    }\n    /**\n   * The CID as a `Buffer`\n   *\n   * @return {Buffer}\n   * @readonly\n   *\n   * @memberOf CID\n   */ get buffer() {\n        let buffer = this._buffer;\n        if (!buffer) {\n            if (this.version === 0) {\n                buffer = this.multihash;\n            } else if (this.version === 1) {\n                buffer = Buffer.concat([\n                    Buffer.from(\"01\", \"hex\"),\n                    multicodec.getCodeVarint(this.codec),\n                    this.multihash\n                ]);\n            } else {\n                throw new Error(\"unsupported version\");\n            }\n            // Cache this buffer so it doesn't have to be recreated\n            Object.defineProperty(this, \"_buffer\", {\n                value: buffer\n            });\n        }\n        return buffer;\n    }\n    /**\n   * Get the prefix of the CID.\n   *\n   * @returns {Buffer}\n   * @readonly\n   */ get prefix() {\n        return Buffer.concat([\n            Buffer.from(`0${this.version}`, \"hex\"),\n            multicodec.getCodeVarint(this.codec),\n            mh.prefix(this.multihash)\n        ]);\n    }\n    /**\n   * Convert to a CID of version `0`.\n   *\n   * @returns {CID}\n   */ toV0() {\n        if (this.codec !== \"dag-pb\") {\n            throw new Error(\"Cannot convert a non dag-pb CID to CIDv0\");\n        }\n        const { name, length } = mh.decode(this.multihash);\n        if (name !== \"sha2-256\") {\n            throw new Error(\"Cannot convert non sha2-256 multihash CID to CIDv0\");\n        }\n        if (length !== 32) {\n            throw new Error(\"Cannot convert non 32 byte multihash CID to CIDv0\");\n        }\n        return new _CID(0, this.codec, this.multihash);\n    }\n    /**\n   * Convert to a CID of version `1`.\n   *\n   * @returns {CID}\n   */ toV1() {\n        return new _CID(1, this.codec, this.multihash);\n    }\n    /**\n   * Encode the CID into a string.\n   *\n   * @param {string} [base=this.multibaseName] - Base encoding to use.\n   * @returns {string}\n   */ toBaseEncodedString(base = this.multibaseName) {\n        if (this.string && base === this.multibaseName) {\n            return this.string;\n        }\n        let str = null;\n        if (this.version === 0) {\n            if (base !== \"base58btc\") {\n                throw new Error(\"not supported with CIDv0, to support different bases, please migrate the instance do CIDv1, you can do that through cid.toV1()\");\n            }\n            str = mh.toB58String(this.multihash);\n        } else if (this.version === 1) {\n            str = multibase.encode(base, this.buffer).toString();\n        } else {\n            throw new Error(\"unsupported version\");\n        }\n        if (base === this.multibaseName) {\n            // cache the string value\n            Object.defineProperty(this, \"string\", {\n                value: str\n            });\n        }\n        return str;\n    }\n    /**\n   * CID(QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n)\n   *\n   * @returns {String}\n   */ [Symbol.for(\"nodejs.util.inspect.custom\")]() {\n        return \"CID(\" + this.toString() + \")\";\n    }\n    toString(base) {\n        return this.toBaseEncodedString(base);\n    }\n    /**\n   * Serialize to a plain object.\n   *\n   * @returns {SerializedCID}\n   */ toJSON() {\n        return {\n            codec: this.codec,\n            version: this.version,\n            hash: this.multihash\n        };\n    }\n    /**\n   * Compare equality with another CID.\n   *\n   * @param {CID} other\n   * @returns {bool}\n   */ equals(other) {\n        return this.codec === other.codec && this.version === other.version && this.multihash.equals(other.multihash);\n    }\n    /**\n   * Test if the given input is a valid CID object.\n   * Throws if it is not.\n   *\n   * @param {any} other\n   * @returns {void}\n   */ static validateCID(other) {\n        const errorMsg = CIDUtil.checkCIDComponents(other);\n        if (errorMsg) {\n            throw new Error(errorMsg);\n        }\n    }\n}\nconst _CID = withIs(CID, {\n    className: \"CID\",\n    symbolName: \"@ipld/js-cid/CID\"\n});\n_CID.codecs = codecs;\nmodule.exports = _CID;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/cids/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/cids/node_modules/multicodec/src/base-table.json":
/*!***********************************************************************!*\
  !*** ./node_modules/cids/node_modules/multicodec/src/base-table.json ***!
  \***********************************************************************/
/***/ ((module) => {

module.exports = JSON.parse('{"identity":0,"ip4":4,"tcp":6,"sha1":17,"sha2-256":18,"sha2-512":19,"sha3-512":20,"sha3-384":21,"sha3-256":22,"sha3-224":23,"shake-128":24,"shake-256":25,"keccak-224":26,"keccak-256":27,"keccak-384":28,"keccak-512":29,"blake3":30,"dccp":33,"murmur3-128":34,"murmur3-32":35,"ip6":41,"ip6zone":42,"path":47,"multicodec":48,"multihash":49,"multiaddr":50,"multibase":51,"dns":53,"dns4":54,"dns6":55,"dnsaddr":56,"protobuf":80,"cbor":81,"raw":85,"dbl-sha2-256":86,"rlp":96,"bencode":99,"dag-pb":112,"dag-cbor":113,"libp2p-key":114,"git-raw":120,"torrent-info":123,"torrent-file":124,"leofcoin-block":129,"leofcoin-tx":130,"leofcoin-pr":131,"sctp":132,"dag-jose":133,"dag-cose":134,"eth-block":144,"eth-block-list":145,"eth-tx-trie":146,"eth-tx":147,"eth-tx-receipt-trie":148,"eth-tx-receipt":149,"eth-state-trie":150,"eth-account-snapshot":151,"eth-storage-trie":152,"bitcoin-block":176,"bitcoin-tx":177,"bitcoin-witness-commitment":178,"zcash-block":192,"zcash-tx":193,"stellar-block":208,"stellar-tx":209,"md4":212,"md5":213,"bmt":214,"decred-block":224,"decred-tx":225,"ipld-ns":226,"ipfs-ns":227,"swarm-ns":228,"ipns-ns":229,"zeronet":230,"secp256k1-pub":231,"bls12_381-g1-pub":234,"bls12_381-g2-pub":235,"x25519-pub":236,"ed25519-pub":237,"dash-block":240,"dash-tx":241,"swarm-manifest":250,"swarm-feed":251,"udp":273,"p2p-webrtc-star":275,"p2p-webrtc-direct":276,"p2p-stardust":277,"p2p-circuit":290,"dag-json":297,"udt":301,"utp":302,"unix":400,"p2p":421,"ipfs":421,"https":443,"onion":444,"onion3":445,"garlic64":446,"garlic32":447,"tls":448,"quic":460,"ws":477,"wss":478,"p2p-websocket-star":479,"http":480,"json":512,"messagepack":513,"libp2p-peer-record":769,"sha2-256-trunc254-padded":4114,"ripemd-128":4178,"ripemd-160":4179,"ripemd-256":4180,"ripemd-320":4181,"x11":4352,"sm3-256":21325,"blake2b-8":45569,"blake2b-16":45570,"blake2b-24":45571,"blake2b-32":45572,"blake2b-40":45573,"blake2b-48":45574,"blake2b-56":45575,"blake2b-64":45576,"blake2b-72":45577,"blake2b-80":45578,"blake2b-88":45579,"blake2b-96":45580,"blake2b-104":45581,"blake2b-112":45582,"blake2b-120":45583,"blake2b-128":45584,"blake2b-136":45585,"blake2b-144":45586,"blake2b-152":45587,"blake2b-160":45588,"blake2b-168":45589,"blake2b-176":45590,"blake2b-184":45591,"blake2b-192":45592,"blake2b-200":45593,"blake2b-208":45594,"blake2b-216":45595,"blake2b-224":45596,"blake2b-232":45597,"blake2b-240":45598,"blake2b-248":45599,"blake2b-256":45600,"blake2b-264":45601,"blake2b-272":45602,"blake2b-280":45603,"blake2b-288":45604,"blake2b-296":45605,"blake2b-304":45606,"blake2b-312":45607,"blake2b-320":45608,"blake2b-328":45609,"blake2b-336":45610,"blake2b-344":45611,"blake2b-352":45612,"blake2b-360":45613,"blake2b-368":45614,"blake2b-376":45615,"blake2b-384":45616,"blake2b-392":45617,"blake2b-400":45618,"blake2b-408":45619,"blake2b-416":45620,"blake2b-424":45621,"blake2b-432":45622,"blake2b-440":45623,"blake2b-448":45624,"blake2b-456":45625,"blake2b-464":45626,"blake2b-472":45627,"blake2b-480":45628,"blake2b-488":45629,"blake2b-496":45630,"blake2b-504":45631,"blake2b-512":45632,"blake2s-8":45633,"blake2s-16":45634,"blake2s-24":45635,"blake2s-32":45636,"blake2s-40":45637,"blake2s-48":45638,"blake2s-56":45639,"blake2s-64":45640,"blake2s-72":45641,"blake2s-80":45642,"blake2s-88":45643,"blake2s-96":45644,"blake2s-104":45645,"blake2s-112":45646,"blake2s-120":45647,"blake2s-128":45648,"blake2s-136":45649,"blake2s-144":45650,"blake2s-152":45651,"blake2s-160":45652,"blake2s-168":45653,"blake2s-176":45654,"blake2s-184":45655,"blake2s-192":45656,"blake2s-200":45657,"blake2s-208":45658,"blake2s-216":45659,"blake2s-224":45660,"blake2s-232":45661,"blake2s-240":45662,"blake2s-248":45663,"blake2s-256":45664,"skein256-8":45825,"skein256-16":45826,"skein256-24":45827,"skein256-32":45828,"skein256-40":45829,"skein256-48":45830,"skein256-56":45831,"skein256-64":45832,"skein256-72":45833,"skein256-80":45834,"skein256-88":45835,"skein256-96":45836,"skein256-104":45837,"skein256-112":45838,"skein256-120":45839,"skein256-128":45840,"skein256-136":45841,"skein256-144":45842,"skein256-152":45843,"skein256-160":45844,"skein256-168":45845,"skein256-176":45846,"skein256-184":45847,"skein256-192":45848,"skein256-200":45849,"skein256-208":45850,"skein256-216":45851,"skein256-224":45852,"skein256-232":45853,"skein256-240":45854,"skein256-248":45855,"skein256-256":45856,"skein512-8":45857,"skein512-16":45858,"skein512-24":45859,"skein512-32":45860,"skein512-40":45861,"skein512-48":45862,"skein512-56":45863,"skein512-64":45864,"skein512-72":45865,"skein512-80":45866,"skein512-88":45867,"skein512-96":45868,"skein512-104":45869,"skein512-112":45870,"skein512-120":45871,"skein512-128":45872,"skein512-136":45873,"skein512-144":45874,"skein512-152":45875,"skein512-160":45876,"skein512-168":45877,"skein512-176":45878,"skein512-184":45879,"skein512-192":45880,"skein512-200":45881,"skein512-208":45882,"skein512-216":45883,"skein512-224":45884,"skein512-232":45885,"skein512-240":45886,"skein512-248":45887,"skein512-256":45888,"skein512-264":45889,"skein512-272":45890,"skein512-280":45891,"skein512-288":45892,"skein512-296":45893,"skein512-304":45894,"skein512-312":45895,"skein512-320":45896,"skein512-328":45897,"skein512-336":45898,"skein512-344":45899,"skein512-352":45900,"skein512-360":45901,"skein512-368":45902,"skein512-376":45903,"skein512-384":45904,"skein512-392":45905,"skein512-400":45906,"skein512-408":45907,"skein512-416":45908,"skein512-424":45909,"skein512-432":45910,"skein512-440":45911,"skein512-448":45912,"skein512-456":45913,"skein512-464":45914,"skein512-472":45915,"skein512-480":45916,"skein512-488":45917,"skein512-496":45918,"skein512-504":45919,"skein512-512":45920,"skein1024-8":45921,"skein1024-16":45922,"skein1024-24":45923,"skein1024-32":45924,"skein1024-40":45925,"skein1024-48":45926,"skein1024-56":45927,"skein1024-64":45928,"skein1024-72":45929,"skein1024-80":45930,"skein1024-88":45931,"skein1024-96":45932,"skein1024-104":45933,"skein1024-112":45934,"skein1024-120":45935,"skein1024-128":45936,"skein1024-136":45937,"skein1024-144":45938,"skein1024-152":45939,"skein1024-160":45940,"skein1024-168":45941,"skein1024-176":45942,"skein1024-184":45943,"skein1024-192":45944,"skein1024-200":45945,"skein1024-208":45946,"skein1024-216":45947,"skein1024-224":45948,"skein1024-232":45949,"skein1024-240":45950,"skein1024-248":45951,"skein1024-256":45952,"skein1024-264":45953,"skein1024-272":45954,"skein1024-280":45955,"skein1024-288":45956,"skein1024-296":45957,"skein1024-304":45958,"skein1024-312":45959,"skein1024-320":45960,"skein1024-328":45961,"skein1024-336":45962,"skein1024-344":45963,"skein1024-352":45964,"skein1024-360":45965,"skein1024-368":45966,"skein1024-376":45967,"skein1024-384":45968,"skein1024-392":45969,"skein1024-400":45970,"skein1024-408":45971,"skein1024-416":45972,"skein1024-424":45973,"skein1024-432":45974,"skein1024-440":45975,"skein1024-448":45976,"skein1024-456":45977,"skein1024-464":45978,"skein1024-472":45979,"skein1024-480":45980,"skein1024-488":45981,"skein1024-496":45982,"skein1024-504":45983,"skein1024-512":45984,"skein1024-520":45985,"skein1024-528":45986,"skein1024-536":45987,"skein1024-544":45988,"skein1024-552":45989,"skein1024-560":45990,"skein1024-568":45991,"skein1024-576":45992,"skein1024-584":45993,"skein1024-592":45994,"skein1024-600":45995,"skein1024-608":45996,"skein1024-616":45997,"skein1024-624":45998,"skein1024-632":45999,"skein1024-640":46000,"skein1024-648":46001,"skein1024-656":46002,"skein1024-664":46003,"skein1024-672":46004,"skein1024-680":46005,"skein1024-688":46006,"skein1024-696":46007,"skein1024-704":46008,"skein1024-712":46009,"skein1024-720":46010,"skein1024-728":46011,"skein1024-736":46012,"skein1024-744":46013,"skein1024-752":46014,"skein1024-760":46015,"skein1024-768":46016,"skein1024-776":46017,"skein1024-784":46018,"skein1024-792":46019,"skein1024-800":46020,"skein1024-808":46021,"skein1024-816":46022,"skein1024-824":46023,"skein1024-832":46024,"skein1024-840":46025,"skein1024-848":46026,"skein1024-856":46027,"skein1024-864":46028,"skein1024-872":46029,"skein1024-880":46030,"skein1024-888":46031,"skein1024-896":46032,"skein1024-904":46033,"skein1024-912":46034,"skein1024-920":46035,"skein1024-928":46036,"skein1024-936":46037,"skein1024-944":46038,"skein1024-952":46039,"skein1024-960":46040,"skein1024-968":46041,"skein1024-976":46042,"skein1024-984":46043,"skein1024-992":46044,"skein1024-1000":46045,"skein1024-1008":46046,"skein1024-1016":46047,"skein1024-1024":46048,"poseidon-bls12_381-a2-fc1":46081,"poseidon-bls12_381-a2-fc1-sc":46082,"zeroxcert-imprint-256":52753,"fil-commitment-unsealed":61697,"fil-commitment-sealed":61698,"holochain-adr-v0":8417572,"holochain-adr-v1":8483108,"holochain-key-v0":9728292,"holochain-key-v1":9793828,"holochain-sig-v0":10645796,"holochain-sig-v1":10711332}');

/***/ })

};
;