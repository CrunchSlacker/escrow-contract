"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/multibase";
exports.ids = ["vendor-chunks/multibase"];
exports.modules = {

/***/ "(ssr)/./node_modules/multibase/node_modules/base-x/src/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/multibase/node_modules/base-x/src/index.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer);\nfunction base(ALPHABET) {\n    if (ALPHABET.length >= 255) {\n        throw new TypeError(\"Alphabet too long\");\n    }\n    var BASE_MAP = new Uint8Array(256);\n    for(var j = 0; j < BASE_MAP.length; j++){\n        BASE_MAP[j] = 255;\n    }\n    for(var i = 0; i < ALPHABET.length; i++){\n        var x = ALPHABET.charAt(i);\n        var xc = x.charCodeAt(0);\n        if (BASE_MAP[xc] !== 255) {\n            throw new TypeError(x + \" is ambiguous\");\n        }\n        BASE_MAP[xc] = i;\n    }\n    var BASE = ALPHABET.length;\n    var LEADER = ALPHABET.charAt(0);\n    var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n    ;\n    var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n    ;\n    function encode(source) {\n        if (Array.isArray(source) || source instanceof Uint8Array) {\n            source = _Buffer.from(source);\n        }\n        if (!_Buffer.isBuffer(source)) {\n            throw new TypeError(\"Expected Buffer\");\n        }\n        if (source.length === 0) {\n            return \"\";\n        }\n        // Skip & count leading zeroes.\n        var zeroes = 0;\n        var length = 0;\n        var pbegin = 0;\n        var pend = source.length;\n        while(pbegin !== pend && source[pbegin] === 0){\n            pbegin++;\n            zeroes++;\n        }\n        // Allocate enough space in big-endian base58 representation.\n        var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n        var b58 = new Uint8Array(size);\n        // Process the bytes.\n        while(pbegin !== pend){\n            var carry = source[pbegin];\n            // Apply \"b58 = b58 * 256 + ch\".\n            var i = 0;\n            for(var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++){\n                carry += 256 * b58[it1] >>> 0;\n                b58[it1] = carry % BASE >>> 0;\n                carry = carry / BASE >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            pbegin++;\n        }\n        // Skip leading zeroes in base58 result.\n        var it2 = size - length;\n        while(it2 !== size && b58[it2] === 0){\n            it2++;\n        }\n        // Translate the result into a string.\n        var str = LEADER.repeat(zeroes);\n        for(; it2 < size; ++it2){\n            str += ALPHABET.charAt(b58[it2]);\n        }\n        return str;\n    }\n    function decodeUnsafe(source) {\n        if (typeof source !== \"string\") {\n            throw new TypeError(\"Expected String\");\n        }\n        if (source.length === 0) {\n            return _Buffer.alloc(0);\n        }\n        var psz = 0;\n        // Skip and count leading '1's.\n        var zeroes = 0;\n        var length = 0;\n        while(source[psz] === LEADER){\n            zeroes++;\n            psz++;\n        }\n        // Allocate enough space in big-endian base256 representation.\n        var size = (source.length - psz) * FACTOR + 1 >>> 0 // log(58) / log(256), rounded up.\n        ;\n        var b256 = new Uint8Array(size);\n        // Process the characters.\n        while(source[psz]){\n            // Decode character\n            var carry = BASE_MAP[source.charCodeAt(psz)];\n            // Invalid character\n            if (carry === 255) {\n                return;\n            }\n            var i = 0;\n            for(var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++){\n                carry += BASE * b256[it3] >>> 0;\n                b256[it3] = carry % 256 >>> 0;\n                carry = carry / 256 >>> 0;\n            }\n            if (carry !== 0) {\n                throw new Error(\"Non-zero carry\");\n            }\n            length = i;\n            psz++;\n        }\n        // Skip leading zeroes in b256.\n        var it4 = size - length;\n        while(it4 !== size && b256[it4] === 0){\n            it4++;\n        }\n        var vch = _Buffer.allocUnsafe(zeroes + (size - it4));\n        vch.fill(0x00, 0, zeroes);\n        var j = zeroes;\n        while(it4 !== size){\n            vch[j++] = b256[it4++];\n        }\n        return vch;\n    }\n    function decode(string) {\n        var buffer = decodeUnsafe(string);\n        if (buffer) {\n            return buffer;\n        }\n        throw new Error(\"Non-base\" + BASE + \" character\");\n    }\n    return {\n        encode: encode,\n        decodeUnsafe: decodeUnsafe,\n        decode: decode\n    };\n}\nmodule.exports = base;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multibase/node_modules/base-x/src/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multibase/src/base.js":
/*!********************************************!*\
  !*** ./node_modules/multibase/src/base.js ***!
  \********************************************/
/***/ ((module) => {

eval("\nclass Base {\n    constructor(name, code, implementation, alphabet){\n        this.name = name;\n        this.code = code;\n        this.alphabet = alphabet;\n        if (implementation && alphabet) {\n            this.engine = implementation(alphabet);\n        }\n    }\n    encode(stringOrBuffer) {\n        return this.engine.encode(stringOrBuffer);\n    }\n    decode(stringOrBuffer) {\n        return this.engine.decode(stringOrBuffer);\n    }\n    isImplemented() {\n        return this.engine;\n    }\n}\nmodule.exports = Base;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUE7SUFDSkMsWUFBYUMsSUFBSSxFQUFFQyxJQUFJLEVBQUVDLGNBQWMsRUFBRUMsUUFBUSxDQUFFO1FBQ2pELElBQUksQ0FBQ0gsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0MsSUFBSSxHQUFHQTtRQUNaLElBQUksQ0FBQ0UsUUFBUSxHQUFHQTtRQUNoQixJQUFJRCxrQkFBa0JDLFVBQVU7WUFDOUIsSUFBSSxDQUFDQyxNQUFNLEdBQUdGLGVBQWVDO1FBQy9CO0lBQ0Y7SUFFQUUsT0FBUUMsY0FBYyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDRixNQUFNLENBQUNDLE1BQU0sQ0FBQ0M7SUFDNUI7SUFFQUMsT0FBUUQsY0FBYyxFQUFFO1FBQ3RCLE9BQU8sSUFBSSxDQUFDRixNQUFNLENBQUNHLE1BQU0sQ0FBQ0Q7SUFDNUI7SUFFQUUsZ0JBQWlCO1FBQ2YsT0FBTyxJQUFJLENBQUNKLE1BQU07SUFDcEI7QUFDRjtBQUVBSyxPQUFPQyxPQUFPLEdBQUdaIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlLmpzPzY3NzkiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnXG5cbmNsYXNzIEJhc2Uge1xuICBjb25zdHJ1Y3RvciAobmFtZSwgY29kZSwgaW1wbGVtZW50YXRpb24sIGFscGhhYmV0KSB7XG4gICAgdGhpcy5uYW1lID0gbmFtZVxuICAgIHRoaXMuY29kZSA9IGNvZGVcbiAgICB0aGlzLmFscGhhYmV0ID0gYWxwaGFiZXRcbiAgICBpZiAoaW1wbGVtZW50YXRpb24gJiYgYWxwaGFiZXQpIHtcbiAgICAgIHRoaXMuZW5naW5lID0gaW1wbGVtZW50YXRpb24oYWxwaGFiZXQpXG4gICAgfVxuICB9XG5cbiAgZW5jb2RlIChzdHJpbmdPckJ1ZmZlcikge1xuICAgIHJldHVybiB0aGlzLmVuZ2luZS5lbmNvZGUoc3RyaW5nT3JCdWZmZXIpXG4gIH1cblxuICBkZWNvZGUgKHN0cmluZ09yQnVmZmVyKSB7XG4gICAgcmV0dXJuIHRoaXMuZW5naW5lLmRlY29kZShzdHJpbmdPckJ1ZmZlcilcbiAgfVxuXG4gIGlzSW1wbGVtZW50ZWQgKCkge1xuICAgIHJldHVybiB0aGlzLmVuZ2luZVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQmFzZVxuIl0sIm5hbWVzIjpbIkJhc2UiLCJjb25zdHJ1Y3RvciIsIm5hbWUiLCJjb2RlIiwiaW1wbGVtZW50YXRpb24iLCJhbHBoYWJldCIsImVuZ2luZSIsImVuY29kZSIsInN0cmluZ09yQnVmZmVyIiwiZGVjb2RlIiwiaXNJbXBsZW1lbnRlZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multibase/src/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multibase/src/base16.js":
/*!**********************************************!*\
  !*** ./node_modules/multibase/src/base16.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { Buffer } = __webpack_require__(/*! buffer */ \"buffer\");\nmodule.exports = function base16(alphabet) {\n    return {\n        encode (input) {\n            if (typeof input === \"string\") {\n                return Buffer.from(input).toString(\"hex\");\n            }\n            return input.toString(\"hex\");\n        },\n        decode (input) {\n            for (const char of input){\n                if (alphabet.indexOf(char) < 0) {\n                    throw new Error(\"invalid base16 character\");\n                }\n            }\n            return Buffer.from(input, \"hex\");\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlMTYuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNLEVBQUVBLE1BQU0sRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUUzQkMsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLE9BQVFDLFFBQVE7SUFDeEMsT0FBTztRQUNMQyxRQUFRQyxLQUFLO1lBQ1gsSUFBSSxPQUFPQSxVQUFVLFVBQVU7Z0JBQzdCLE9BQU9QLE9BQU9RLElBQUksQ0FBQ0QsT0FBT0UsUUFBUSxDQUFDO1lBQ3JDO1lBQ0EsT0FBT0YsTUFBTUUsUUFBUSxDQUFDO1FBQ3hCO1FBQ0FDLFFBQVFILEtBQUs7WUFDWCxLQUFLLE1BQU1JLFFBQVFKLE1BQU87Z0JBQ3hCLElBQUlGLFNBQVNPLE9BQU8sQ0FBQ0QsUUFBUSxHQUFHO29CQUM5QixNQUFNLElBQUlFLE1BQU07Z0JBQ2xCO1lBQ0Y7WUFDQSxPQUFPYixPQUFPUSxJQUFJLENBQUNELE9BQU87UUFDNUI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlMTYuanM/YzQ5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbmNvbnN0IHsgQnVmZmVyIH0gPSByZXF1aXJlKCdidWZmZXInKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJhc2UxNiAoYWxwaGFiZXQpIHtcbiAgcmV0dXJuIHtcbiAgICBlbmNvZGUgKGlucHV0KSB7XG4gICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQpLnRvU3RyaW5nKCdoZXgnKVxuICAgICAgfVxuICAgICAgcmV0dXJuIGlucHV0LnRvU3RyaW5nKCdoZXgnKVxuICAgIH0sXG4gICAgZGVjb2RlIChpbnB1dCkge1xuICAgICAgZm9yIChjb25zdCBjaGFyIG9mIGlucHV0KSB7XG4gICAgICAgIGlmIChhbHBoYWJldC5pbmRleE9mKGNoYXIpIDwgMCkge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcignaW52YWxpZCBiYXNlMTYgY2hhcmFjdGVyJylcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LCAnaGV4JylcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJCdWZmZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImJhc2UxNiIsImFscGhhYmV0IiwiZW5jb2RlIiwiaW5wdXQiLCJmcm9tIiwidG9TdHJpbmciLCJkZWNvZGUiLCJjaGFyIiwiaW5kZXhPZiIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multibase/src/base16.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multibase/src/base32.js":
/*!**********************************************!*\
  !*** ./node_modules/multibase/src/base32.js ***!
  \**********************************************/
/***/ ((module) => {

eval("\nfunction decode(input, alphabet) {\n    input = input.replace(new RegExp(\"=\", \"g\"), \"\");\n    const length = input.length;\n    let bits = 0;\n    let value = 0;\n    let index = 0;\n    const output = new Uint8Array(length * 5 / 8 | 0);\n    for(let i = 0; i < length; i++){\n        value = value << 5 | alphabet.indexOf(input[i]);\n        bits += 5;\n        if (bits >= 8) {\n            output[index++] = value >>> bits - 8 & 255;\n            bits -= 8;\n        }\n    }\n    return output.buffer;\n}\nfunction encode(buffer, alphabet) {\n    const length = buffer.byteLength;\n    const view = new Uint8Array(buffer);\n    const padding = alphabet.indexOf(\"=\") === alphabet.length - 1;\n    if (padding) {\n        alphabet = alphabet.substring(0, alphabet.length - 1);\n    }\n    let bits = 0;\n    let value = 0;\n    let output = \"\";\n    for(let i = 0; i < length; i++){\n        value = value << 8 | view[i];\n        bits += 8;\n        while(bits >= 5){\n            output += alphabet[value >>> bits - 5 & 31];\n            bits -= 5;\n        }\n    }\n    if (bits > 0) {\n        output += alphabet[value << 5 - bits & 31];\n    }\n    if (padding) {\n        while(output.length % 8 !== 0){\n            output += \"=\";\n        }\n    }\n    return output;\n}\nmodule.exports = function base32(alphabet) {\n    return {\n        encode (input) {\n            if (typeof input === \"string\") {\n                return encode(Uint8Array.from(input), alphabet);\n            }\n            return encode(input, alphabet);\n        },\n        decode (input) {\n            for (const char of input){\n                if (alphabet.indexOf(char) < 0) {\n                    throw new Error(\"invalid base32 character\");\n                }\n            }\n            return decode(input, alphabet);\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlMzIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxTQUFTQSxPQUFRQyxLQUFLLEVBQUVDLFFBQVE7SUFDOUJELFFBQVFBLE1BQU1FLE9BQU8sQ0FBQyxJQUFJQyxPQUFPLEtBQUssTUFBTTtJQUM1QyxNQUFNQyxTQUFTSixNQUFNSSxNQUFNO0lBRTNCLElBQUlDLE9BQU87SUFDWCxJQUFJQyxRQUFRO0lBRVosSUFBSUMsUUFBUTtJQUNaLE1BQU1DLFNBQVMsSUFBSUMsV0FBVyxTQUFVLElBQUksSUFBSztJQUVqRCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSU4sUUFBUU0sSUFBSztRQUMvQkosUUFBUSxTQUFVLElBQUtMLFNBQVNVLE9BQU8sQ0FBQ1gsS0FBSyxDQUFDVSxFQUFFO1FBQ2hETCxRQUFRO1FBRVIsSUFBSUEsUUFBUSxHQUFHO1lBQ2JHLE1BQU0sQ0FBQ0QsUUFBUSxHQUFHLFVBQVlGLE9BQU8sSUFBTTtZQUMzQ0EsUUFBUTtRQUNWO0lBQ0Y7SUFFQSxPQUFPRyxPQUFPSSxNQUFNO0FBQ3RCO0FBRUEsU0FBU0MsT0FBUUQsTUFBTSxFQUFFWCxRQUFRO0lBQy9CLE1BQU1HLFNBQVNRLE9BQU9FLFVBQVU7SUFDaEMsTUFBTUMsT0FBTyxJQUFJTixXQUFXRztJQUM1QixNQUFNSSxVQUFVZixTQUFTVSxPQUFPLENBQUMsU0FBU1YsU0FBU0csTUFBTSxHQUFHO0lBRTVELElBQUlZLFNBQVM7UUFDWGYsV0FBV0EsU0FBU2dCLFNBQVMsQ0FBQyxHQUFHaEIsU0FBU0csTUFBTSxHQUFHO0lBQ3JEO0lBRUEsSUFBSUMsT0FBTztJQUNYLElBQUlDLFFBQVE7SUFDWixJQUFJRSxTQUFTO0lBRWIsSUFBSyxJQUFJRSxJQUFJLEdBQUdBLElBQUlOLFFBQVFNLElBQUs7UUFDL0JKLFFBQVEsU0FBVSxJQUFLUyxJQUFJLENBQUNMLEVBQUU7UUFDOUJMLFFBQVE7UUFFUixNQUFPQSxRQUFRLEVBQUc7WUFDaEJHLFVBQVVQLFFBQVEsQ0FBQyxVQUFZSSxPQUFPLElBQU0sR0FBRztZQUMvQ0EsUUFBUTtRQUNWO0lBQ0Y7SUFFQSxJQUFJQSxPQUFPLEdBQUc7UUFDWkcsVUFBVVAsUUFBUSxDQUFDLFNBQVcsSUFBSUksT0FBUyxHQUFHO0lBQ2hEO0lBRUEsSUFBSVcsU0FBUztRQUNYLE1BQU8sT0FBUVosTUFBTSxHQUFHLE1BQU8sRUFBRztZQUNoQ0ksVUFBVTtRQUNaO0lBQ0Y7SUFFQSxPQUFPQTtBQUNUO0FBRUFVLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxPQUFRbkIsUUFBUTtJQUN4QyxPQUFPO1FBQ0xZLFFBQVFiLEtBQUs7WUFDWCxJQUFJLE9BQU9BLFVBQVUsVUFBVTtnQkFDN0IsT0FBT2EsT0FBT0osV0FBV1ksSUFBSSxDQUFDckIsUUFBUUM7WUFDeEM7WUFFQSxPQUFPWSxPQUFPYixPQUFPQztRQUN2QjtRQUNBRixRQUFRQyxLQUFLO1lBQ1gsS0FBSyxNQUFNc0IsUUFBUXRCLE1BQU87Z0JBQ3hCLElBQUlDLFNBQVNVLE9BQU8sQ0FBQ1csUUFBUSxHQUFHO29CQUM5QixNQUFNLElBQUlDLE1BQU07Z0JBQ2xCO1lBQ0Y7WUFFQSxPQUFPeEIsT0FBT0MsT0FBT0M7UUFDdkI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlMzIuanM/MmQ5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuZnVuY3Rpb24gZGVjb2RlIChpbnB1dCwgYWxwaGFiZXQpIHtcbiAgaW5wdXQgPSBpbnB1dC5yZXBsYWNlKG5ldyBSZWdFeHAoJz0nLCAnZycpLCAnJylcbiAgY29uc3QgbGVuZ3RoID0gaW5wdXQubGVuZ3RoXG5cbiAgbGV0IGJpdHMgPSAwXG4gIGxldCB2YWx1ZSA9IDBcblxuICBsZXQgaW5kZXggPSAwXG4gIGNvbnN0IG91dHB1dCA9IG5ldyBVaW50OEFycmF5KChsZW5ndGggKiA1IC8gOCkgfCAwKVxuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICB2YWx1ZSA9ICh2YWx1ZSA8PCA1KSB8IGFscGhhYmV0LmluZGV4T2YoaW5wdXRbaV0pXG4gICAgYml0cyArPSA1XG5cbiAgICBpZiAoYml0cyA+PSA4KSB7XG4gICAgICBvdXRwdXRbaW5kZXgrK10gPSAodmFsdWUgPj4+IChiaXRzIC0gOCkpICYgMjU1XG4gICAgICBiaXRzIC09IDhcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0cHV0LmJ1ZmZlclxufVxuXG5mdW5jdGlvbiBlbmNvZGUgKGJ1ZmZlciwgYWxwaGFiZXQpIHtcbiAgY29uc3QgbGVuZ3RoID0gYnVmZmVyLmJ5dGVMZW5ndGhcbiAgY29uc3QgdmlldyA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcilcbiAgY29uc3QgcGFkZGluZyA9IGFscGhhYmV0LmluZGV4T2YoJz0nKSA9PT0gYWxwaGFiZXQubGVuZ3RoIC0gMVxuXG4gIGlmIChwYWRkaW5nKSB7XG4gICAgYWxwaGFiZXQgPSBhbHBoYWJldC5zdWJzdHJpbmcoMCwgYWxwaGFiZXQubGVuZ3RoIC0gMSlcbiAgfVxuXG4gIGxldCBiaXRzID0gMFxuICBsZXQgdmFsdWUgPSAwXG4gIGxldCBvdXRwdXQgPSAnJ1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICB2YWx1ZSA9ICh2YWx1ZSA8PCA4KSB8IHZpZXdbaV1cbiAgICBiaXRzICs9IDhcblxuICAgIHdoaWxlIChiaXRzID49IDUpIHtcbiAgICAgIG91dHB1dCArPSBhbHBoYWJldFsodmFsdWUgPj4+IChiaXRzIC0gNSkpICYgMzFdXG4gICAgICBiaXRzIC09IDVcbiAgICB9XG4gIH1cblxuICBpZiAoYml0cyA+IDApIHtcbiAgICBvdXRwdXQgKz0gYWxwaGFiZXRbKHZhbHVlIDw8ICg1IC0gYml0cykpICYgMzFdXG4gIH1cblxuICBpZiAocGFkZGluZykge1xuICAgIHdoaWxlICgob3V0cHV0Lmxlbmd0aCAlIDgpICE9PSAwKSB7XG4gICAgICBvdXRwdXQgKz0gJz0nXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIG91dHB1dFxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJhc2UzMiAoYWxwaGFiZXQpIHtcbiAgcmV0dXJuIHtcbiAgICBlbmNvZGUgKGlucHV0KSB7XG4gICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gZW5jb2RlKFVpbnQ4QXJyYXkuZnJvbShpbnB1dCksIGFscGhhYmV0KVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gZW5jb2RlKGlucHV0LCBhbHBoYWJldClcbiAgICB9LFxuICAgIGRlY29kZSAoaW5wdXQpIHtcbiAgICAgIGZvciAoY29uc3QgY2hhciBvZiBpbnB1dCkge1xuICAgICAgICBpZiAoYWxwaGFiZXQuaW5kZXhPZihjaGFyKSA8IDApIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgYmFzZTMyIGNoYXJhY3RlcicpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRlY29kZShpbnB1dCwgYWxwaGFiZXQpXG4gICAgfVxuICB9XG59XG4iXSwibmFtZXMiOlsiZGVjb2RlIiwiaW5wdXQiLCJhbHBoYWJldCIsInJlcGxhY2UiLCJSZWdFeHAiLCJsZW5ndGgiLCJiaXRzIiwidmFsdWUiLCJpbmRleCIsIm91dHB1dCIsIlVpbnQ4QXJyYXkiLCJpIiwiaW5kZXhPZiIsImJ1ZmZlciIsImVuY29kZSIsImJ5dGVMZW5ndGgiLCJ2aWV3IiwicGFkZGluZyIsInN1YnN0cmluZyIsIm1vZHVsZSIsImV4cG9ydHMiLCJiYXNlMzIiLCJmcm9tIiwiY2hhciIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multibase/src/base32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multibase/src/base64.js":
/*!**********************************************!*\
  !*** ./node_modules/multibase/src/base64.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { Buffer } = __webpack_require__(/*! buffer */ \"buffer\");\nmodule.exports = function base64(alphabet) {\n    // The alphabet is only used to know:\n    //   1. If padding is enabled (must contain '=')\n    //   2. If the output must be url-safe (must contain '-' and '_')\n    //   3. If the input of the output function is valid\n    // The alphabets from RFC 4648 are always used.\n    const padding = alphabet.indexOf(\"=\") > -1;\n    const url = alphabet.indexOf(\"-\") > -1 && alphabet.indexOf(\"_\") > -1;\n    return {\n        encode (input) {\n            let output = \"\";\n            if (typeof input === \"string\") {\n                output = Buffer.from(input).toString(\"base64\");\n            } else {\n                output = input.toString(\"base64\");\n            }\n            if (url) {\n                output = output.replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n            }\n            const pad = output.indexOf(\"=\");\n            if (pad > 0 && !padding) {\n                output = output.substring(0, pad);\n            }\n            return output;\n        },\n        decode (input) {\n            for (const char of input){\n                if (alphabet.indexOf(char) < 0) {\n                    throw new Error(\"invalid base64 character\");\n                }\n            }\n            return Buffer.from(input, \"base64\");\n        }\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlNjQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNLEVBQUVBLE1BQU0sRUFBRSxHQUFHQyxtQkFBT0EsQ0FBQztBQUUzQkMsT0FBT0MsT0FBTyxHQUFHLFNBQVNDLE9BQVFDLFFBQVE7SUFDeEMscUNBQXFDO0lBQ3JDLGdEQUFnRDtJQUNoRCxpRUFBaUU7SUFDakUsb0RBQW9EO0lBQ3BELCtDQUErQztJQUMvQyxNQUFNQyxVQUFVRCxTQUFTRSxPQUFPLENBQUMsT0FBTyxDQUFDO0lBQ3pDLE1BQU1DLE1BQU1ILFNBQVNFLE9BQU8sQ0FBQyxPQUFPLENBQUMsS0FBS0YsU0FBU0UsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUVuRSxPQUFPO1FBQ0xFLFFBQVFDLEtBQUs7WUFDWCxJQUFJQyxTQUFTO1lBRWIsSUFBSSxPQUFPRCxVQUFVLFVBQVU7Z0JBQzdCQyxTQUFTWCxPQUFPWSxJQUFJLENBQUNGLE9BQU9HLFFBQVEsQ0FBQztZQUN2QyxPQUFPO2dCQUNMRixTQUFTRCxNQUFNRyxRQUFRLENBQUM7WUFDMUI7WUFFQSxJQUFJTCxLQUFLO2dCQUNQRyxTQUFTQSxPQUFPRyxPQUFPLENBQUMsT0FBTyxLQUFLQSxPQUFPLENBQUMsT0FBTztZQUNyRDtZQUVBLE1BQU1DLE1BQU1KLE9BQU9KLE9BQU8sQ0FBQztZQUMzQixJQUFJUSxNQUFNLEtBQUssQ0FBQ1QsU0FBUztnQkFDdkJLLFNBQVNBLE9BQU9LLFNBQVMsQ0FBQyxHQUFHRDtZQUMvQjtZQUVBLE9BQU9KO1FBQ1Q7UUFDQU0sUUFBUVAsS0FBSztZQUNYLEtBQUssTUFBTVEsUUFBUVIsTUFBTztnQkFDeEIsSUFBSUwsU0FBU0UsT0FBTyxDQUFDVyxRQUFRLEdBQUc7b0JBQzlCLE1BQU0sSUFBSUMsTUFBTTtnQkFDbEI7WUFDRjtZQUVBLE9BQU9uQixPQUFPWSxJQUFJLENBQUNGLE9BQU87UUFDNUI7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9iYXNlNjQuanM/OGIwMCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcbmNvbnN0IHsgQnVmZmVyIH0gPSByZXF1aXJlKCdidWZmZXInKVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGJhc2U2NCAoYWxwaGFiZXQpIHtcbiAgLy8gVGhlIGFscGhhYmV0IGlzIG9ubHkgdXNlZCB0byBrbm93OlxuICAvLyAgIDEuIElmIHBhZGRpbmcgaXMgZW5hYmxlZCAobXVzdCBjb250YWluICc9JylcbiAgLy8gICAyLiBJZiB0aGUgb3V0cHV0IG11c3QgYmUgdXJsLXNhZmUgKG11c3QgY29udGFpbiAnLScgYW5kICdfJylcbiAgLy8gICAzLiBJZiB0aGUgaW5wdXQgb2YgdGhlIG91dHB1dCBmdW5jdGlvbiBpcyB2YWxpZFxuICAvLyBUaGUgYWxwaGFiZXRzIGZyb20gUkZDIDQ2NDggYXJlIGFsd2F5cyB1c2VkLlxuICBjb25zdCBwYWRkaW5nID0gYWxwaGFiZXQuaW5kZXhPZignPScpID4gLTFcbiAgY29uc3QgdXJsID0gYWxwaGFiZXQuaW5kZXhPZignLScpID4gLTEgJiYgYWxwaGFiZXQuaW5kZXhPZignXycpID4gLTFcblxuICByZXR1cm4ge1xuICAgIGVuY29kZSAoaW5wdXQpIHtcbiAgICAgIGxldCBvdXRwdXQgPSAnJ1xuXG4gICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBvdXRwdXQgPSBCdWZmZXIuZnJvbShpbnB1dCkudG9TdHJpbmcoJ2Jhc2U2NCcpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBvdXRwdXQgPSBpbnB1dC50b1N0cmluZygnYmFzZTY0JylcbiAgICAgIH1cblxuICAgICAgaWYgKHVybCkge1xuICAgICAgICBvdXRwdXQgPSBvdXRwdXQucmVwbGFjZSgvXFwrL2csICctJykucmVwbGFjZSgvXFwvL2csICdfJylcbiAgICAgIH1cblxuICAgICAgY29uc3QgcGFkID0gb3V0cHV0LmluZGV4T2YoJz0nKVxuICAgICAgaWYgKHBhZCA+IDAgJiYgIXBhZGRpbmcpIHtcbiAgICAgICAgb3V0cHV0ID0gb3V0cHV0LnN1YnN0cmluZygwLCBwYWQpXG4gICAgICB9XG5cbiAgICAgIHJldHVybiBvdXRwdXRcbiAgICB9LFxuICAgIGRlY29kZSAoaW5wdXQpIHtcbiAgICAgIGZvciAoY29uc3QgY2hhciBvZiBpbnB1dCkge1xuICAgICAgICBpZiAoYWxwaGFiZXQuaW5kZXhPZihjaGFyKSA8IDApIHtcbiAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFsaWQgYmFzZTY0IGNoYXJhY3RlcicpXG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LCAnYmFzZTY0JylcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJCdWZmZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImJhc2U2NCIsImFscGhhYmV0IiwicGFkZGluZyIsImluZGV4T2YiLCJ1cmwiLCJlbmNvZGUiLCJpbnB1dCIsIm91dHB1dCIsImZyb20iLCJ0b1N0cmluZyIsInJlcGxhY2UiLCJwYWQiLCJzdWJzdHJpbmciLCJkZWNvZGUiLCJjaGFyIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multibase/src/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multibase/src/constants.js":
/*!*************************************************!*\
  !*** ./node_modules/multibase/src/constants.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst Base = __webpack_require__(/*! ./base.js */ \"(ssr)/./node_modules/multibase/src/base.js\");\nconst baseX = __webpack_require__(/*! base-x */ \"(ssr)/./node_modules/multibase/node_modules/base-x/src/index.js\");\nconst base16 = __webpack_require__(/*! ./base16 */ \"(ssr)/./node_modules/multibase/src/base16.js\");\nconst base32 = __webpack_require__(/*! ./base32 */ \"(ssr)/./node_modules/multibase/src/base32.js\");\nconst base64 = __webpack_require__(/*! ./base64 */ \"(ssr)/./node_modules/multibase/src/base64.js\");\n// name, code, implementation, alphabet\nconst constants = [\n    [\n        \"base1\",\n        \"1\",\n        \"\",\n        \"1\"\n    ],\n    [\n        \"base2\",\n        \"0\",\n        baseX,\n        \"01\"\n    ],\n    [\n        \"base8\",\n        \"7\",\n        baseX,\n        \"01234567\"\n    ],\n    [\n        \"base10\",\n        \"9\",\n        baseX,\n        \"0123456789\"\n    ],\n    [\n        \"base16\",\n        \"f\",\n        base16,\n        \"0123456789abcdef\"\n    ],\n    [\n        \"base32\",\n        \"b\",\n        base32,\n        \"abcdefghijklmnopqrstuvwxyz234567\"\n    ],\n    [\n        \"base32pad\",\n        \"c\",\n        base32,\n        \"abcdefghijklmnopqrstuvwxyz234567=\"\n    ],\n    [\n        \"base32hex\",\n        \"v\",\n        base32,\n        \"0123456789abcdefghijklmnopqrstuv\"\n    ],\n    [\n        \"base32hexpad\",\n        \"t\",\n        base32,\n        \"0123456789abcdefghijklmnopqrstuv=\"\n    ],\n    [\n        \"base32z\",\n        \"h\",\n        base32,\n        \"ybndrfg8ejkmcpqxot1uwisza345h769\"\n    ],\n    [\n        \"base58flickr\",\n        \"Z\",\n        baseX,\n        \"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ\"\n    ],\n    [\n        \"base58btc\",\n        \"z\",\n        baseX,\n        \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\"\n    ],\n    [\n        \"base64\",\n        \"m\",\n        base64,\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"\n    ],\n    [\n        \"base64pad\",\n        \"M\",\n        base64,\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"\n    ],\n    [\n        \"base64url\",\n        \"u\",\n        base64,\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\"\n    ],\n    [\n        \"base64urlpad\",\n        \"U\",\n        base64,\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=\"\n    ]\n];\nconst names = constants.reduce((prev, tupple)=>{\n    prev[tupple[0]] = new Base(tupple[0], tupple[1], tupple[2], tupple[3]);\n    return prev;\n}, {});\nconst codes = constants.reduce((prev, tupple)=>{\n    prev[tupple[1]] = names[tupple[0]];\n    return prev;\n}, {});\nmodule.exports = {\n    names: names,\n    codes: codes\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9jb25zdGFudHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxPQUFPQyxtQkFBT0EsQ0FBQztBQUNyQixNQUFNQyxRQUFRRCxtQkFBT0EsQ0FBQztBQUN0QixNQUFNRSxTQUFTRixtQkFBT0EsQ0FBQztBQUN2QixNQUFNRyxTQUFTSCxtQkFBT0EsQ0FBQztBQUN2QixNQUFNSSxTQUFTSixtQkFBT0EsQ0FBQztBQUV2Qix1Q0FBdUM7QUFDdkMsTUFBTUssWUFBWTtJQUNoQjtRQUFDO1FBQVM7UUFBSztRQUFJO0tBQUk7SUFDdkI7UUFBQztRQUFTO1FBQUtKO1FBQU87S0FBSztJQUMzQjtRQUFDO1FBQVM7UUFBS0E7UUFBTztLQUFXO0lBQ2pDO1FBQUM7UUFBVTtRQUFLQTtRQUFPO0tBQWE7SUFDcEM7UUFBQztRQUFVO1FBQUtDO1FBQVE7S0FBbUI7SUFDM0M7UUFBQztRQUFVO1FBQUtDO1FBQVE7S0FBbUM7SUFDM0Q7UUFBQztRQUFhO1FBQUtBO1FBQVE7S0FBb0M7SUFDL0Q7UUFBQztRQUFhO1FBQUtBO1FBQVE7S0FBbUM7SUFDOUQ7UUFBQztRQUFnQjtRQUFLQTtRQUFRO0tBQW9DO0lBQ2xFO1FBQUM7UUFBVztRQUFLQTtRQUFRO0tBQW1DO0lBQzVEO1FBQUM7UUFBZ0I7UUFBS0Y7UUFBTztLQUE2RDtJQUMxRjtRQUFDO1FBQWE7UUFBS0E7UUFBTztLQUE2RDtJQUN2RjtRQUFDO1FBQVU7UUFBS0c7UUFBUTtLQUFtRTtJQUMzRjtRQUFDO1FBQWE7UUFBS0E7UUFBUTtLQUFvRTtJQUMvRjtRQUFDO1FBQWE7UUFBS0E7UUFBUTtLQUFtRTtJQUM5RjtRQUFDO1FBQWdCO1FBQUtBO1FBQVE7S0FBb0U7Q0FDbkc7QUFFRCxNQUFNRSxRQUFRRCxVQUFVRSxNQUFNLENBQUMsQ0FBQ0MsTUFBTUM7SUFDcENELElBQUksQ0FBQ0MsTUFBTSxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUlWLEtBQUtVLE1BQU0sQ0FBQyxFQUFFLEVBQUVBLE1BQU0sQ0FBQyxFQUFFLEVBQUVBLE1BQU0sQ0FBQyxFQUFFLEVBQUVBLE1BQU0sQ0FBQyxFQUFFO0lBQ3JFLE9BQU9EO0FBQ1QsR0FBRyxDQUFDO0FBRUosTUFBTUUsUUFBUUwsVUFBVUUsTUFBTSxDQUFDLENBQUNDLE1BQU1DO0lBQ3BDRCxJQUFJLENBQUNDLE1BQU0sQ0FBQyxFQUFFLENBQUMsR0FBR0gsS0FBSyxDQUFDRyxNQUFNLENBQUMsRUFBRSxDQUFDO0lBQ2xDLE9BQU9EO0FBQ1QsR0FBRyxDQUFDO0FBRUpHLE9BQU9DLE9BQU8sR0FBRztJQUNmTixPQUFPQTtJQUNQSSxPQUFPQTtBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9jb25zdGFudHMuanM/ZWE0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCdcblxuY29uc3QgQmFzZSA9IHJlcXVpcmUoJy4vYmFzZS5qcycpXG5jb25zdCBiYXNlWCA9IHJlcXVpcmUoJ2Jhc2UteCcpXG5jb25zdCBiYXNlMTYgPSByZXF1aXJlKCcuL2Jhc2UxNicpXG5jb25zdCBiYXNlMzIgPSByZXF1aXJlKCcuL2Jhc2UzMicpXG5jb25zdCBiYXNlNjQgPSByZXF1aXJlKCcuL2Jhc2U2NCcpXG5cbi8vIG5hbWUsIGNvZGUsIGltcGxlbWVudGF0aW9uLCBhbHBoYWJldFxuY29uc3QgY29uc3RhbnRzID0gW1xuICBbJ2Jhc2UxJywgJzEnLCAnJywgJzEnXSxcbiAgWydiYXNlMicsICcwJywgYmFzZVgsICcwMSddLFxuICBbJ2Jhc2U4JywgJzcnLCBiYXNlWCwgJzAxMjM0NTY3J10sXG4gIFsnYmFzZTEwJywgJzknLCBiYXNlWCwgJzAxMjM0NTY3ODknXSxcbiAgWydiYXNlMTYnLCAnZicsIGJhc2UxNiwgJzAxMjM0NTY3ODlhYmNkZWYnXSxcbiAgWydiYXNlMzInLCAnYicsIGJhc2UzMiwgJ2FiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MjM0NTY3J10sXG4gIFsnYmFzZTMycGFkJywgJ2MnLCBiYXNlMzIsICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejIzNDU2Nz0nXSxcbiAgWydiYXNlMzJoZXgnLCAndicsIGJhc2UzMiwgJzAxMjM0NTY3ODlhYmNkZWZnaGlqa2xtbm9wcXJzdHV2J10sXG4gIFsnYmFzZTMyaGV4cGFkJywgJ3QnLCBiYXNlMzIsICcwMTIzNDU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dj0nXSxcbiAgWydiYXNlMzJ6JywgJ2gnLCBiYXNlMzIsICd5Ym5kcmZnOGVqa21jcHF4b3QxdXdpc3phMzQ1aDc2OSddLFxuICBbJ2Jhc2U1OGZsaWNrcicsICdaJywgYmFzZVgsICcxMjM0NTY3ODlhYmNkZWZnaGlqa21ub3BxcnN0dXZ3eHl6QUJDREVGR0hKS0xNTlBRUlNUVVZXWFlaJ10sXG4gIFsnYmFzZTU4YnRjJywgJ3onLCBiYXNlWCwgJzEyMzQ1Njc4OUFCQ0RFRkdISktMTU5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbW5vcHFyc3R1dnd4eXonXSxcbiAgWydiYXNlNjQnLCAnbScsIGJhc2U2NCwgJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8nXSxcbiAgWydiYXNlNjRwYWQnLCAnTScsIGJhc2U2NCwgJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky89J10sXG4gIFsnYmFzZTY0dXJsJywgJ3UnLCBiYXNlNjQsICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fJ10sXG4gIFsnYmFzZTY0dXJscGFkJywgJ1UnLCBiYXNlNjQsICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OS1fPSddXG5dXG5cbmNvbnN0IG5hbWVzID0gY29uc3RhbnRzLnJlZHVjZSgocHJldiwgdHVwcGxlKSA9PiB7XG4gIHByZXZbdHVwcGxlWzBdXSA9IG5ldyBCYXNlKHR1cHBsZVswXSwgdHVwcGxlWzFdLCB0dXBwbGVbMl0sIHR1cHBsZVszXSlcbiAgcmV0dXJuIHByZXZcbn0sIHt9KVxuXG5jb25zdCBjb2RlcyA9IGNvbnN0YW50cy5yZWR1Y2UoKHByZXYsIHR1cHBsZSkgPT4ge1xuICBwcmV2W3R1cHBsZVsxXV0gPSBuYW1lc1t0dXBwbGVbMF1dXG4gIHJldHVybiBwcmV2XG59LCB7fSlcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIG5hbWVzOiBuYW1lcyxcbiAgY29kZXM6IGNvZGVzXG59XG4iXSwibmFtZXMiOlsiQmFzZSIsInJlcXVpcmUiLCJiYXNlWCIsImJhc2UxNiIsImJhc2UzMiIsImJhc2U2NCIsImNvbnN0YW50cyIsIm5hbWVzIiwicmVkdWNlIiwicHJldiIsInR1cHBsZSIsImNvZGVzIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multibase/src/constants.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/multibase/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/multibase/src/index.js ***!
  \*********************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/**\n * Implementation of the [multibase](https://github.com/multiformats/multibase) specification.\n * @module Multibase\n */ \nconst { Buffer } = __webpack_require__(/*! buffer */ \"buffer\");\nconst constants = __webpack_require__(/*! ./constants */ \"(ssr)/./node_modules/multibase/src/constants.js\");\nexports = module.exports = multibase;\nexports.encode = encode;\nexports.decode = decode;\nexports.isEncoded = isEncoded;\nexports.names = Object.freeze(Object.keys(constants.names));\nexports.codes = Object.freeze(Object.keys(constants.codes));\nconst errNotSupported = new Error(\"Unsupported encoding\");\n/**\n * Create a new buffer with the multibase varint+code.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be prefixed with multibase.\n * @memberof Multibase\n * @returns {Buffer}\n */ function multibase(nameOrCode, buf) {\n    if (!buf) {\n        throw new Error(\"requires an encoded buffer\");\n    }\n    const base = getBase(nameOrCode);\n    const codeBuf = Buffer.from(base.code);\n    const name = base.name;\n    validEncode(name, buf);\n    return Buffer.concat([\n        codeBuf,\n        buf\n    ]);\n}\n/**\n * Encode data with the specified base and add the multibase prefix.\n *\n * @param {string|number} nameOrCode - The multibase name or code number.\n * @param {Buffer} buf - The data to be encoded.\n * @returns {Buffer}\n * @memberof Multibase\n */ function encode(nameOrCode, buf) {\n    const base = getBase(nameOrCode);\n    const name = base.name;\n    return multibase(name, Buffer.from(base.encode(buf)));\n}\n/**\n * Takes a buffer or string encoded with multibase header, decodes it and\n * returns the decoded buffer\n *\n * @param {Buffer|string} bufOrString\n * @returns {Buffer}\n * @memberof Multibase\n *\n */ function decode(bufOrString) {\n    if (Buffer.isBuffer(bufOrString)) {\n        bufOrString = bufOrString.toString();\n    }\n    const code = bufOrString.substring(0, 1);\n    bufOrString = bufOrString.substring(1, bufOrString.length);\n    if (typeof bufOrString === \"string\") {\n        bufOrString = Buffer.from(bufOrString);\n    }\n    const base = getBase(code);\n    return Buffer.from(base.decode(bufOrString.toString()));\n}\n/**\n * Is the given data multibase encoded?\n *\n * @param {Buffer|string} bufOrString\n * @returns {boolean}\n * @memberof Multibase\n */ function isEncoded(bufOrString) {\n    if (Buffer.isBuffer(bufOrString)) {\n        bufOrString = bufOrString.toString();\n    }\n    // Ensure bufOrString is a string\n    if (Object.prototype.toString.call(bufOrString) !== \"[object String]\") {\n        return false;\n    }\n    const code = bufOrString.substring(0, 1);\n    try {\n        const base = getBase(code);\n        return base.name;\n    } catch (err) {\n        return false;\n    }\n}\n/**\n * @param {string} name\n * @param {Buffer} buf\n * @private\n * @returns {undefined}\n */ function validEncode(name, buf) {\n    const base = getBase(name);\n    base.decode(buf.toString());\n}\nfunction getBase(nameOrCode) {\n    let base;\n    if (constants.names[nameOrCode]) {\n        base = constants.names[nameOrCode];\n    } else if (constants.codes[nameOrCode]) {\n        base = constants.codes[nameOrCode];\n    } else {\n        throw errNotSupported;\n    }\n    if (!base.isImplemented()) {\n        throw new Error(\"Base \" + nameOrCode + \" is not implemented yet\");\n    }\n    return base;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbXVsdGliYXNlL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7O0NBR0MsR0FDRDtBQUVBLE1BQU0sRUFBRUEsTUFBTSxFQUFFLEdBQUdDLG1CQUFPQSxDQUFDO0FBQzNCLE1BQU1DLFlBQVlELG1CQUFPQSxDQUFDO0FBRTFCRSxVQUFVQyxPQUFPRCxPQUFPLEdBQUdFO0FBQzNCRixjQUFjLEdBQUdHO0FBQ2pCSCxjQUFjLEdBQUdJO0FBQ2pCSixpQkFBaUIsR0FBR0s7QUFDcEJMLGFBQWEsR0FBR08sT0FBT0MsTUFBTSxDQUFDRCxPQUFPRSxJQUFJLENBQUNWLFVBQVVPLEtBQUs7QUFDekROLGFBQWEsR0FBR08sT0FBT0MsTUFBTSxDQUFDRCxPQUFPRSxJQUFJLENBQUNWLFVBQVVXLEtBQUs7QUFFekQsTUFBTUMsa0JBQWtCLElBQUlDLE1BQU07QUFFbEM7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNWLFVBQVdXLFVBQVUsRUFBRUMsR0FBRztJQUNqQyxJQUFJLENBQUNBLEtBQUs7UUFDUixNQUFNLElBQUlGLE1BQU07SUFDbEI7SUFDQSxNQUFNRyxPQUFPQyxRQUFRSDtJQUNyQixNQUFNSSxVQUFVcEIsT0FBT3FCLElBQUksQ0FBQ0gsS0FBS0ksSUFBSTtJQUVyQyxNQUFNQyxPQUFPTCxLQUFLSyxJQUFJO0lBQ3RCQyxZQUFZRCxNQUFNTjtJQUNsQixPQUFPakIsT0FBT3lCLE1BQU0sQ0FBQztRQUFDTDtRQUFTSDtLQUFJO0FBQ3JDO0FBRUE7Ozs7Ozs7Q0FPQyxHQUNELFNBQVNYLE9BQVFVLFVBQVUsRUFBRUMsR0FBRztJQUM5QixNQUFNQyxPQUFPQyxRQUFRSDtJQUNyQixNQUFNTyxPQUFPTCxLQUFLSyxJQUFJO0lBRXRCLE9BQU9sQixVQUFVa0IsTUFBTXZCLE9BQU9xQixJQUFJLENBQUNILEtBQUtaLE1BQU0sQ0FBQ1c7QUFDakQ7QUFFQTs7Ozs7Ozs7Q0FRQyxHQUNELFNBQVNWLE9BQVFtQixXQUFXO0lBQzFCLElBQUkxQixPQUFPMkIsUUFBUSxDQUFDRCxjQUFjO1FBQ2hDQSxjQUFjQSxZQUFZRSxRQUFRO0lBQ3BDO0lBRUEsTUFBTU4sT0FBT0ksWUFBWUcsU0FBUyxDQUFDLEdBQUc7SUFDdENILGNBQWNBLFlBQVlHLFNBQVMsQ0FBQyxHQUFHSCxZQUFZSSxNQUFNO0lBRXpELElBQUksT0FBT0osZ0JBQWdCLFVBQVU7UUFDbkNBLGNBQWMxQixPQUFPcUIsSUFBSSxDQUFDSztJQUM1QjtJQUVBLE1BQU1SLE9BQU9DLFFBQVFHO0lBQ3JCLE9BQU90QixPQUFPcUIsSUFBSSxDQUFDSCxLQUFLWCxNQUFNLENBQUNtQixZQUFZRSxRQUFRO0FBQ3JEO0FBRUE7Ozs7OztDQU1DLEdBQ0QsU0FBU3BCLFVBQVdrQixXQUFXO0lBQzdCLElBQUkxQixPQUFPMkIsUUFBUSxDQUFDRCxjQUFjO1FBQ2hDQSxjQUFjQSxZQUFZRSxRQUFRO0lBQ3BDO0lBRUEsaUNBQWlDO0lBQ2pDLElBQUlsQixPQUFPcUIsU0FBUyxDQUFDSCxRQUFRLENBQUNJLElBQUksQ0FBQ04saUJBQWlCLG1CQUFtQjtRQUNyRSxPQUFPO0lBQ1Q7SUFFQSxNQUFNSixPQUFPSSxZQUFZRyxTQUFTLENBQUMsR0FBRztJQUN0QyxJQUFJO1FBQ0YsTUFBTVgsT0FBT0MsUUFBUUc7UUFDckIsT0FBT0osS0FBS0ssSUFBSTtJQUNsQixFQUFFLE9BQU9VLEtBQUs7UUFDWixPQUFPO0lBQ1Q7QUFDRjtBQUVBOzs7OztDQUtDLEdBQ0QsU0FBU1QsWUFBYUQsSUFBSSxFQUFFTixHQUFHO0lBQzdCLE1BQU1DLE9BQU9DLFFBQVFJO0lBQ3JCTCxLQUFLWCxNQUFNLENBQUNVLElBQUlXLFFBQVE7QUFDMUI7QUFFQSxTQUFTVCxRQUFTSCxVQUFVO0lBQzFCLElBQUlFO0lBRUosSUFBSWhCLFVBQVVPLEtBQUssQ0FBQ08sV0FBVyxFQUFFO1FBQy9CRSxPQUFPaEIsVUFBVU8sS0FBSyxDQUFDTyxXQUFXO0lBQ3BDLE9BQU8sSUFBSWQsVUFBVVcsS0FBSyxDQUFDRyxXQUFXLEVBQUU7UUFDdENFLE9BQU9oQixVQUFVVyxLQUFLLENBQUNHLFdBQVc7SUFDcEMsT0FBTztRQUNMLE1BQU1GO0lBQ1I7SUFFQSxJQUFJLENBQUNJLEtBQUtnQixhQUFhLElBQUk7UUFDekIsTUFBTSxJQUFJbkIsTUFBTSxVQUFVQyxhQUFhO0lBQ3pDO0lBRUEsT0FBT0U7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL211bHRpYmFzZS9zcmMvaW5kZXguanM/OGZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEltcGxlbWVudGF0aW9uIG9mIHRoZSBbbXVsdGliYXNlXShodHRwczovL2dpdGh1Yi5jb20vbXVsdGlmb3JtYXRzL211bHRpYmFzZSkgc3BlY2lmaWNhdGlvbi5cbiAqIEBtb2R1bGUgTXVsdGliYXNlXG4gKi9cbid1c2Ugc3RyaWN0J1xuXG5jb25zdCB7IEJ1ZmZlciB9ID0gcmVxdWlyZSgnYnVmZmVyJylcbmNvbnN0IGNvbnN0YW50cyA9IHJlcXVpcmUoJy4vY29uc3RhbnRzJylcblxuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gbXVsdGliYXNlXG5leHBvcnRzLmVuY29kZSA9IGVuY29kZVxuZXhwb3J0cy5kZWNvZGUgPSBkZWNvZGVcbmV4cG9ydHMuaXNFbmNvZGVkID0gaXNFbmNvZGVkXG5leHBvcnRzLm5hbWVzID0gT2JqZWN0LmZyZWV6ZShPYmplY3Qua2V5cyhjb25zdGFudHMubmFtZXMpKVxuZXhwb3J0cy5jb2RlcyA9IE9iamVjdC5mcmVlemUoT2JqZWN0LmtleXMoY29uc3RhbnRzLmNvZGVzKSlcblxuY29uc3QgZXJyTm90U3VwcG9ydGVkID0gbmV3IEVycm9yKCdVbnN1cHBvcnRlZCBlbmNvZGluZycpXG5cbi8qKlxuICogQ3JlYXRlIGEgbmV3IGJ1ZmZlciB3aXRoIHRoZSBtdWx0aWJhc2UgdmFyaW50K2NvZGUuXG4gKlxuICogQHBhcmFtIHtzdHJpbmd8bnVtYmVyfSBuYW1lT3JDb2RlIC0gVGhlIG11bHRpYmFzZSBuYW1lIG9yIGNvZGUgbnVtYmVyLlxuICogQHBhcmFtIHtCdWZmZXJ9IGJ1ZiAtIFRoZSBkYXRhIHRvIGJlIHByZWZpeGVkIHdpdGggbXVsdGliYXNlLlxuICogQG1lbWJlcm9mIE11bHRpYmFzZVxuICogQHJldHVybnMge0J1ZmZlcn1cbiAqL1xuZnVuY3Rpb24gbXVsdGliYXNlIChuYW1lT3JDb2RlLCBidWYpIHtcbiAgaWYgKCFidWYpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3JlcXVpcmVzIGFuIGVuY29kZWQgYnVmZmVyJylcbiAgfVxuICBjb25zdCBiYXNlID0gZ2V0QmFzZShuYW1lT3JDb2RlKVxuICBjb25zdCBjb2RlQnVmID0gQnVmZmVyLmZyb20oYmFzZS5jb2RlKVxuXG4gIGNvbnN0IG5hbWUgPSBiYXNlLm5hbWVcbiAgdmFsaWRFbmNvZGUobmFtZSwgYnVmKVxuICByZXR1cm4gQnVmZmVyLmNvbmNhdChbY29kZUJ1ZiwgYnVmXSlcbn1cblxuLyoqXG4gKiBFbmNvZGUgZGF0YSB3aXRoIHRoZSBzcGVjaWZpZWQgYmFzZSBhbmQgYWRkIHRoZSBtdWx0aWJhc2UgcHJlZml4LlxuICpcbiAqIEBwYXJhbSB7c3RyaW5nfG51bWJlcn0gbmFtZU9yQ29kZSAtIFRoZSBtdWx0aWJhc2UgbmFtZSBvciBjb2RlIG51bWJlci5cbiAqIEBwYXJhbSB7QnVmZmVyfSBidWYgLSBUaGUgZGF0YSB0byBiZSBlbmNvZGVkLlxuICogQHJldHVybnMge0J1ZmZlcn1cbiAqIEBtZW1iZXJvZiBNdWx0aWJhc2VcbiAqL1xuZnVuY3Rpb24gZW5jb2RlIChuYW1lT3JDb2RlLCBidWYpIHtcbiAgY29uc3QgYmFzZSA9IGdldEJhc2UobmFtZU9yQ29kZSlcbiAgY29uc3QgbmFtZSA9IGJhc2UubmFtZVxuXG4gIHJldHVybiBtdWx0aWJhc2UobmFtZSwgQnVmZmVyLmZyb20oYmFzZS5lbmNvZGUoYnVmKSkpXG59XG5cbi8qKlxuICogVGFrZXMgYSBidWZmZXIgb3Igc3RyaW5nIGVuY29kZWQgd2l0aCBtdWx0aWJhc2UgaGVhZGVyLCBkZWNvZGVzIGl0IGFuZFxuICogcmV0dXJucyB0aGUgZGVjb2RlZCBidWZmZXJcbiAqXG4gKiBAcGFyYW0ge0J1ZmZlcnxzdHJpbmd9IGJ1Zk9yU3RyaW5nXG4gKiBAcmV0dXJucyB7QnVmZmVyfVxuICogQG1lbWJlcm9mIE11bHRpYmFzZVxuICpcbiAqL1xuZnVuY3Rpb24gZGVjb2RlIChidWZPclN0cmluZykge1xuICBpZiAoQnVmZmVyLmlzQnVmZmVyKGJ1Zk9yU3RyaW5nKSkge1xuICAgIGJ1Zk9yU3RyaW5nID0gYnVmT3JTdHJpbmcudG9TdHJpbmcoKVxuICB9XG5cbiAgY29uc3QgY29kZSA9IGJ1Zk9yU3RyaW5nLnN1YnN0cmluZygwLCAxKVxuICBidWZPclN0cmluZyA9IGJ1Zk9yU3RyaW5nLnN1YnN0cmluZygxLCBidWZPclN0cmluZy5sZW5ndGgpXG5cbiAgaWYgKHR5cGVvZiBidWZPclN0cmluZyA9PT0gJ3N0cmluZycpIHtcbiAgICBidWZPclN0cmluZyA9IEJ1ZmZlci5mcm9tKGJ1Zk9yU3RyaW5nKVxuICB9XG5cbiAgY29uc3QgYmFzZSA9IGdldEJhc2UoY29kZSlcbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJhc2UuZGVjb2RlKGJ1Zk9yU3RyaW5nLnRvU3RyaW5nKCkpKVxufVxuXG4vKipcbiAqIElzIHRoZSBnaXZlbiBkYXRhIG11bHRpYmFzZSBlbmNvZGVkP1xuICpcbiAqIEBwYXJhbSB7QnVmZmVyfHN0cmluZ30gYnVmT3JTdHJpbmdcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICogQG1lbWJlcm9mIE11bHRpYmFzZVxuICovXG5mdW5jdGlvbiBpc0VuY29kZWQgKGJ1Zk9yU3RyaW5nKSB7XG4gIGlmIChCdWZmZXIuaXNCdWZmZXIoYnVmT3JTdHJpbmcpKSB7XG4gICAgYnVmT3JTdHJpbmcgPSBidWZPclN0cmluZy50b1N0cmluZygpXG4gIH1cblxuICAvLyBFbnN1cmUgYnVmT3JTdHJpbmcgaXMgYSBzdHJpbmdcbiAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChidWZPclN0cmluZykgIT09ICdbb2JqZWN0IFN0cmluZ10nKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBjb25zdCBjb2RlID0gYnVmT3JTdHJpbmcuc3Vic3RyaW5nKDAsIDEpXG4gIHRyeSB7XG4gICAgY29uc3QgYmFzZSA9IGdldEJhc2UoY29kZSlcbiAgICByZXR1cm4gYmFzZS5uYW1lXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBmYWxzZVxuICB9XG59XG5cbi8qKlxuICogQHBhcmFtIHtzdHJpbmd9IG5hbWVcbiAqIEBwYXJhbSB7QnVmZmVyfSBidWZcbiAqIEBwcml2YXRlXG4gKiBAcmV0dXJucyB7dW5kZWZpbmVkfVxuICovXG5mdW5jdGlvbiB2YWxpZEVuY29kZSAobmFtZSwgYnVmKSB7XG4gIGNvbnN0IGJhc2UgPSBnZXRCYXNlKG5hbWUpXG4gIGJhc2UuZGVjb2RlKGJ1Zi50b1N0cmluZygpKVxufVxuXG5mdW5jdGlvbiBnZXRCYXNlIChuYW1lT3JDb2RlKSB7XG4gIGxldCBiYXNlXG5cbiAgaWYgKGNvbnN0YW50cy5uYW1lc1tuYW1lT3JDb2RlXSkge1xuICAgIGJhc2UgPSBjb25zdGFudHMubmFtZXNbbmFtZU9yQ29kZV1cbiAgfSBlbHNlIGlmIChjb25zdGFudHMuY29kZXNbbmFtZU9yQ29kZV0pIHtcbiAgICBiYXNlID0gY29uc3RhbnRzLmNvZGVzW25hbWVPckNvZGVdXG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgZXJyTm90U3VwcG9ydGVkXG4gIH1cblxuICBpZiAoIWJhc2UuaXNJbXBsZW1lbnRlZCgpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdCYXNlICcgKyBuYW1lT3JDb2RlICsgJyBpcyBub3QgaW1wbGVtZW50ZWQgeWV0JylcbiAgfVxuXG4gIHJldHVybiBiYXNlXG59XG4iXSwibmFtZXMiOlsiQnVmZmVyIiwicmVxdWlyZSIsImNvbnN0YW50cyIsImV4cG9ydHMiLCJtb2R1bGUiLCJtdWx0aWJhc2UiLCJlbmNvZGUiLCJkZWNvZGUiLCJpc0VuY29kZWQiLCJuYW1lcyIsIk9iamVjdCIsImZyZWV6ZSIsImtleXMiLCJjb2RlcyIsImVyck5vdFN1cHBvcnRlZCIsIkVycm9yIiwibmFtZU9yQ29kZSIsImJ1ZiIsImJhc2UiLCJnZXRCYXNlIiwiY29kZUJ1ZiIsImZyb20iLCJjb2RlIiwibmFtZSIsInZhbGlkRW5jb2RlIiwiY29uY2F0IiwiYnVmT3JTdHJpbmciLCJpc0J1ZmZlciIsInRvU3RyaW5nIiwic3Vic3RyaW5nIiwibGVuZ3RoIiwicHJvdG90eXBlIiwiY2FsbCIsImVyciIsImlzSW1wbGVtZW50ZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/multibase/src/index.js\n");

/***/ })

};
;