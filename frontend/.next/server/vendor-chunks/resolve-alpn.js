"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/resolve-alpn";
exports.ids = ["vendor-chunks/resolve-alpn"];
exports.modules = {

/***/ "(ssr)/./node_modules/resolve-alpn/index.js":
/*!********************************************!*\
  !*** ./node_modules/resolve-alpn/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst tls = __webpack_require__(/*! tls */ \"tls\");\nmodule.exports = (options = {}, connect = tls.connect)=>new Promise((resolve, reject)=>{\n        let timeout = false;\n        let socket;\n        const callback = async ()=>{\n            await socketPromise;\n            socket.off(\"timeout\", onTimeout);\n            socket.off(\"error\", reject);\n            if (options.resolveSocket) {\n                resolve({\n                    alpnProtocol: socket.alpnProtocol,\n                    socket,\n                    timeout\n                });\n                if (timeout) {\n                    await Promise.resolve();\n                    socket.emit(\"timeout\");\n                }\n            } else {\n                socket.destroy();\n                resolve({\n                    alpnProtocol: socket.alpnProtocol,\n                    timeout\n                });\n            }\n        };\n        const onTimeout = async ()=>{\n            timeout = true;\n            callback();\n        };\n        const socketPromise = (async ()=>{\n            try {\n                socket = await connect(options, callback);\n                socket.on(\"error\", reject);\n                socket.once(\"timeout\", onTimeout);\n            } catch (error) {\n                reject(error);\n            }\n        })();\n    });\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVzb2x2ZS1hbHBuL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0EsTUFBTUEsTUFBTUMsbUJBQU9BLENBQUM7QUFFcEJDLE9BQU9DLE9BQU8sR0FBRyxDQUFDQyxVQUFVLENBQUMsQ0FBQyxFQUFFQyxVQUFVTCxJQUFJSyxPQUFPLEdBQUssSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMvRSxJQUFJQyxVQUFVO1FBRWQsSUFBSUM7UUFFSixNQUFNQyxXQUFXO1lBQ2hCLE1BQU1DO1lBRU5GLE9BQU9HLEdBQUcsQ0FBQyxXQUFXQztZQUN0QkosT0FBT0csR0FBRyxDQUFDLFNBQVNMO1lBRXBCLElBQUlKLFFBQVFXLGFBQWEsRUFBRTtnQkFDMUJSLFFBQVE7b0JBQUNTLGNBQWNOLE9BQU9NLFlBQVk7b0JBQUVOO29CQUFRRDtnQkFBTztnQkFFM0QsSUFBSUEsU0FBUztvQkFDWixNQUFNSCxRQUFRQyxPQUFPO29CQUNyQkcsT0FBT08sSUFBSSxDQUFDO2dCQUNiO1lBQ0QsT0FBTztnQkFDTlAsT0FBT1EsT0FBTztnQkFDZFgsUUFBUTtvQkFBQ1MsY0FBY04sT0FBT00sWUFBWTtvQkFBRVA7Z0JBQU87WUFDcEQ7UUFDRDtRQUVBLE1BQU1LLFlBQVk7WUFDakJMLFVBQVU7WUFDVkU7UUFDRDtRQUVBLE1BQU1DLGdCQUFnQixDQUFDO1lBQ3RCLElBQUk7Z0JBQ0hGLFNBQVMsTUFBTUwsUUFBUUQsU0FBU087Z0JBRWhDRCxPQUFPUyxFQUFFLENBQUMsU0FBU1g7Z0JBQ25CRSxPQUFPVSxJQUFJLENBQUMsV0FBV047WUFDeEIsRUFBRSxPQUFPTyxPQUFPO2dCQUNmYixPQUFPYTtZQUNSO1FBQ0Q7SUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4vbm9kZV9tb2R1bGVzL3Jlc29sdmUtYWxwbi9pbmRleC5qcz9hZGMzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IHRscyA9IHJlcXVpcmUoJ3RscycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IChvcHRpb25zID0ge30sIGNvbm5lY3QgPSB0bHMuY29ubmVjdCkgPT4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuXHRsZXQgdGltZW91dCA9IGZhbHNlO1xuXG5cdGxldCBzb2NrZXQ7XG5cblx0Y29uc3QgY2FsbGJhY2sgPSBhc3luYyAoKSA9PiB7XG5cdFx0YXdhaXQgc29ja2V0UHJvbWlzZTtcblxuXHRcdHNvY2tldC5vZmYoJ3RpbWVvdXQnLCBvblRpbWVvdXQpO1xuXHRcdHNvY2tldC5vZmYoJ2Vycm9yJywgcmVqZWN0KTtcblxuXHRcdGlmIChvcHRpb25zLnJlc29sdmVTb2NrZXQpIHtcblx0XHRcdHJlc29sdmUoe2FscG5Qcm90b2NvbDogc29ja2V0LmFscG5Qcm90b2NvbCwgc29ja2V0LCB0aW1lb3V0fSk7XG5cblx0XHRcdGlmICh0aW1lb3V0KSB7XG5cdFx0XHRcdGF3YWl0IFByb21pc2UucmVzb2x2ZSgpO1xuXHRcdFx0XHRzb2NrZXQuZW1pdCgndGltZW91dCcpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzb2NrZXQuZGVzdHJveSgpO1xuXHRcdFx0cmVzb2x2ZSh7YWxwblByb3RvY29sOiBzb2NrZXQuYWxwblByb3RvY29sLCB0aW1lb3V0fSk7XG5cdFx0fVxuXHR9O1xuXG5cdGNvbnN0IG9uVGltZW91dCA9IGFzeW5jICgpID0+IHtcblx0XHR0aW1lb3V0ID0gdHJ1ZTtcblx0XHRjYWxsYmFjaygpO1xuXHR9O1xuXG5cdGNvbnN0IHNvY2tldFByb21pc2UgPSAoYXN5bmMgKCkgPT4ge1xuXHRcdHRyeSB7XG5cdFx0XHRzb2NrZXQgPSBhd2FpdCBjb25uZWN0KG9wdGlvbnMsIGNhbGxiYWNrKTtcblxuXHRcdFx0c29ja2V0Lm9uKCdlcnJvcicsIHJlamVjdCk7XG5cdFx0XHRzb2NrZXQub25jZSgndGltZW91dCcsIG9uVGltZW91dCk7XG5cdFx0fSBjYXRjaCAoZXJyb3IpIHtcblx0XHRcdHJlamVjdChlcnJvcik7XG5cdFx0fVxuXHR9KSgpO1xufSk7XG4iXSwibmFtZXMiOlsidGxzIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJvcHRpb25zIiwiY29ubmVjdCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwidGltZW91dCIsInNvY2tldCIsImNhbGxiYWNrIiwic29ja2V0UHJvbWlzZSIsIm9mZiIsIm9uVGltZW91dCIsInJlc29sdmVTb2NrZXQiLCJhbHBuUHJvdG9jb2wiLCJlbWl0IiwiZGVzdHJveSIsIm9uIiwib25jZSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/resolve-alpn/index.js\n");

/***/ })

};
;